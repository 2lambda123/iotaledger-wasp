version: "3.9"
networks:
  tangle:
    name: private_tangle_peering_net
    external: true
services:
  #####################################################
  # Reverse Proxy (needed to rewrite dashboard route) #
  #####################################################

  traefik:
    container_name: traefik
    networks:
      - tangle
    image: traefik:v2.9
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "${HTTP_PORT:-80}:80/tcp"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  ########
  # WASP #
  ########

  wasp:
    container_name: wasp
    networks:
      - tangle
    image: iotaledger/wasp:latest

    build:
      context: ../../
      dockerfile: Dockerfile.noncached
      args:
        BUILD_TAGS: "${BUILD_TAGS:-rocksdb}"
        BUILD_LD_FLAGS: "${BUILD_LD_FLAGS:--X=github.com/iotaledger/wasp/core/app.Version=v0.0.0-testing}"
    ulimits:
      nofile:
        soft: 16384
        hard: 16384
    restart: on-failure:1
    stop_grace_period: 5m
    depends_on:
      traefik:
        condition: service_started
    ports:
      - "5000:4000/tcp" # Peering
      - "9090:9090/tcp" # WebAPI
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wasp-api.service=wasp-api"
      - "traefik.http.routers.wasp-api.rule=Host(`localhost`) && (Path(`/wasp/api`) || PathPrefix(`/wasp/api/`))"
      - "traefik.http.routers.wasp-api.entrypoints=web"
      - "traefik.http.services.wasp-api.loadbalancer.server.port=9090"
      - "traefik.http.routers.wasp-api.middlewares=rewrite-wasp-api"
      - "traefik.http.middlewares.rewrite-wasp-api.stripprefix.prefixes=/wasp/api"
    cap_drop:
      - ALL
    volumes:
      - wasp-db:/app/waspdb
    command:
      - "--webapi.auth.scheme=none"
      - "--inx.address=172.18.211.11:9029"
      - "--logger.level=debug"
      - "--db.chainState.path=/app/waspdb/chains/data"
      - "--p2p.identity.filePath=/app/waspdb/identity/identity.key"
      - "--p2p.db.path=/app/waspdb/p2pstore"
      - "--registries.chains.filePath=/app/waspdb/chains/chain_registry.json"
      - "--registries.dkShares.path=/app/waspdb/dkshares"
      - "--registries.trustedPeers.filePath=/app/waspdb/trusted_peers.json"
      - "--registries.consensusState.path=/app/waspdb/chains/consensus"
      - "--wal.path=/app/waspdb/wal"

  ##################
  # WASP Dashboard #
  ##################

  wasp-dashboard:
    container_name: wasp-dashboard
    networks:
      - tangle
    image: iotaledger/wasp-dashboard:latest
    stop_grace_period: 5m
    restart: unless-stopped
    depends_on:
      traefik:
        condition: service_started
      wasp:
        condition: service_started
    ports:
      - "8088:80/tcp"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wasp-dashboard.service=wasp-dashboard"
      - "traefik.http.routers.wasp-dashboard.rule=Host(`localhost`) && (Path(`/wasp/dashboard`) || PathPrefix(`/wasp/dashboard/`))"
      - "traefik.http.routers.wasp-dashboard.entrypoints=web"
      - "traefik.http.services.wasp-dashboard.loadbalancer.server.port=80"
      - "traefik.http.routers.wasp-dashboard.middlewares=rewrite-wasp-dashboard"
      - "traefik.http.middlewares.rewrite-wasp-dashboard.stripprefix.prefixes=/wasp/dashboard"
    environment:
      - WASP_API_URL=http://localhost/wasp/api
      - L1_API_URL=http://localhost

volumes:
  wasp-db:
    external: true
    name: wasp-db
