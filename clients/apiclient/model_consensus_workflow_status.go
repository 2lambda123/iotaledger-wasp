/*
Wasp API

REST API for the Wasp node

API version: 123
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
	"time"
)

// checks if the ConsensusWorkflowStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConsensusWorkflowStatus{}

// ConsensusWorkflowStatus struct for ConsensusWorkflowStatus
type ConsensusWorkflowStatus struct {
	// Shows current state index of the consensus
	CurrentStateIndex *uint32 `json:"currentStateIndex,omitempty"`
	// Shows if batch proposal is sent out in current consensus iteration
	FlagBatchProposalSent *bool `json:"flagBatchProposalSent,omitempty"`
	// Shows if consensus on batch is reached and known in current consensus iteration
	FlagConsensusBatchKnown *bool `json:"flagConsensusBatchKnown,omitempty"`
	// Shows if consensus algorithm is still not completed in current consensus iteration
	FlagInProgress *bool `json:"flagInProgress,omitempty"`
	// Shows if state output is received in current consensus iteration
	FlagStateReceived *bool `json:"flagStateReceived,omitempty"`
	// Shows if consensus on transaction is reached in current consensus iteration
	FlagTransactionFinalized *bool `json:"flagTransactionFinalized,omitempty"`
	// Shows if transaction is posted to L1 in current consensus iteration
	FlagTransactionPosted *bool `json:"flagTransactionPosted,omitempty"`
	// Shows if L1 reported that it has seen the transaction of current consensus iteration
	FlagTransactionSeen *bool `json:"flagTransactionSeen,omitempty"`
	// Shows if virtual machine has returned its results in current consensus iteration
	FlagVMResultSigned *bool `json:"flagVMResultSigned,omitempty"`
	// Shows if virtual machine is started in current consensus iteration
	FlagVMStarted *bool `json:"flagVMStarted,omitempty"`
	// Shows when batch proposal was last sent out in current consensus iteration
	TimeBatchProposalSent *time.Time `json:"timeBatchProposalSent,omitempty"`
	// Shows when algorithm was last completed in current consensus iteration
	TimeCompleted *time.Time `json:"timeCompleted,omitempty"`
	// Shows when ACS results of consensus on batch was last received in current consensus iteration
	TimeConsensusBatchKnown *time.Time `json:"timeConsensusBatchKnown,omitempty"`
	// Shows when algorithm last noted that all the data for consensus on transaction had been received in current consensus iteration
	TimeTransactionFinalized *time.Time `json:"timeTransactionFinalized,omitempty"`
	// Shows when transaction was last posted to L1 in current consensus iteration
	TimeTransactionPosted *time.Time `json:"timeTransactionPosted,omitempty"`
	// Shows when algorithm last noted that transaction hadd been seen by L1 in current consensus iteration
	TimeTransactionSeen *time.Time `json:"timeTransactionSeen,omitempty"`
	// Shows when virtual machine results were last received and signed in current consensus iteration
	TimeVMResultSigned *time.Time `json:"timeVMResultSigned,omitempty"`
	// Shows when virtual machine was last started in current consensus iteration
	TimeVMStarted *time.Time `json:"timeVMStarted,omitempty"`
}

// NewConsensusWorkflowStatus instantiates a new ConsensusWorkflowStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConsensusWorkflowStatus() *ConsensusWorkflowStatus {
	this := ConsensusWorkflowStatus{}
	return &this
}

// NewConsensusWorkflowStatusWithDefaults instantiates a new ConsensusWorkflowStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsensusWorkflowStatusWithDefaults() *ConsensusWorkflowStatus {
	this := ConsensusWorkflowStatus{}
	return &this
}

// GetCurrentStateIndex returns the CurrentStateIndex field value if set, zero value otherwise.
func (o *ConsensusWorkflowStatus) GetCurrentStateIndex() uint32 {
	if o == nil || isNil(o.CurrentStateIndex) {
		var ret uint32
		return ret
	}
	return *o.CurrentStateIndex
}

// GetCurrentStateIndexOk returns a tuple with the CurrentStateIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsensusWorkflowStatus) GetCurrentStateIndexOk() (*uint32, bool) {
	if o == nil || isNil(o.CurrentStateIndex) {
		return nil, false
	}
	return o.CurrentStateIndex, true
}

// HasCurrentStateIndex returns a boolean if a field has been set.
func (o *ConsensusWorkflowStatus) HasCurrentStateIndex() bool {
	if o != nil && !isNil(o.CurrentStateIndex) {
		return true
	}

	return false
}

// SetCurrentStateIndex gets a reference to the given uint32 and assigns it to the CurrentStateIndex field.
func (o *ConsensusWorkflowStatus) SetCurrentStateIndex(v uint32) {
	o.CurrentStateIndex = &v
}

// GetFlagBatchProposalSent returns the FlagBatchProposalSent field value if set, zero value otherwise.
func (o *ConsensusWorkflowStatus) GetFlagBatchProposalSent() bool {
	if o == nil || isNil(o.FlagBatchProposalSent) {
		var ret bool
		return ret
	}
	return *o.FlagBatchProposalSent
}

// GetFlagBatchProposalSentOk returns a tuple with the FlagBatchProposalSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsensusWorkflowStatus) GetFlagBatchProposalSentOk() (*bool, bool) {
	if o == nil || isNil(o.FlagBatchProposalSent) {
		return nil, false
	}
	return o.FlagBatchProposalSent, true
}

// HasFlagBatchProposalSent returns a boolean if a field has been set.
func (o *ConsensusWorkflowStatus) HasFlagBatchProposalSent() bool {
	if o != nil && !isNil(o.FlagBatchProposalSent) {
		return true
	}

	return false
}

// SetFlagBatchProposalSent gets a reference to the given bool and assigns it to the FlagBatchProposalSent field.
func (o *ConsensusWorkflowStatus) SetFlagBatchProposalSent(v bool) {
	o.FlagBatchProposalSent = &v
}

// GetFlagConsensusBatchKnown returns the FlagConsensusBatchKnown field value if set, zero value otherwise.
func (o *ConsensusWorkflowStatus) GetFlagConsensusBatchKnown() bool {
	if o == nil || isNil(o.FlagConsensusBatchKnown) {
		var ret bool
		return ret
	}
	return *o.FlagConsensusBatchKnown
}

// GetFlagConsensusBatchKnownOk returns a tuple with the FlagConsensusBatchKnown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsensusWorkflowStatus) GetFlagConsensusBatchKnownOk() (*bool, bool) {
	if o == nil || isNil(o.FlagConsensusBatchKnown) {
		return nil, false
	}
	return o.FlagConsensusBatchKnown, true
}

// HasFlagConsensusBatchKnown returns a boolean if a field has been set.
func (o *ConsensusWorkflowStatus) HasFlagConsensusBatchKnown() bool {
	if o != nil && !isNil(o.FlagConsensusBatchKnown) {
		return true
	}

	return false
}

// SetFlagConsensusBatchKnown gets a reference to the given bool and assigns it to the FlagConsensusBatchKnown field.
func (o *ConsensusWorkflowStatus) SetFlagConsensusBatchKnown(v bool) {
	o.FlagConsensusBatchKnown = &v
}

// GetFlagInProgress returns the FlagInProgress field value if set, zero value otherwise.
func (o *ConsensusWorkflowStatus) GetFlagInProgress() bool {
	if o == nil || isNil(o.FlagInProgress) {
		var ret bool
		return ret
	}
	return *o.FlagInProgress
}

// GetFlagInProgressOk returns a tuple with the FlagInProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsensusWorkflowStatus) GetFlagInProgressOk() (*bool, bool) {
	if o == nil || isNil(o.FlagInProgress) {
		return nil, false
	}
	return o.FlagInProgress, true
}

// HasFlagInProgress returns a boolean if a field has been set.
func (o *ConsensusWorkflowStatus) HasFlagInProgress() bool {
	if o != nil && !isNil(o.FlagInProgress) {
		return true
	}

	return false
}

// SetFlagInProgress gets a reference to the given bool and assigns it to the FlagInProgress field.
func (o *ConsensusWorkflowStatus) SetFlagInProgress(v bool) {
	o.FlagInProgress = &v
}

// GetFlagStateReceived returns the FlagStateReceived field value if set, zero value otherwise.
func (o *ConsensusWorkflowStatus) GetFlagStateReceived() bool {
	if o == nil || isNil(o.FlagStateReceived) {
		var ret bool
		return ret
	}
	return *o.FlagStateReceived
}

// GetFlagStateReceivedOk returns a tuple with the FlagStateReceived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsensusWorkflowStatus) GetFlagStateReceivedOk() (*bool, bool) {
	if o == nil || isNil(o.FlagStateReceived) {
		return nil, false
	}
	return o.FlagStateReceived, true
}

// HasFlagStateReceived returns a boolean if a field has been set.
func (o *ConsensusWorkflowStatus) HasFlagStateReceived() bool {
	if o != nil && !isNil(o.FlagStateReceived) {
		return true
	}

	return false
}

// SetFlagStateReceived gets a reference to the given bool and assigns it to the FlagStateReceived field.
func (o *ConsensusWorkflowStatus) SetFlagStateReceived(v bool) {
	o.FlagStateReceived = &v
}

// GetFlagTransactionFinalized returns the FlagTransactionFinalized field value if set, zero value otherwise.
func (o *ConsensusWorkflowStatus) GetFlagTransactionFinalized() bool {
	if o == nil || isNil(o.FlagTransactionFinalized) {
		var ret bool
		return ret
	}
	return *o.FlagTransactionFinalized
}

// GetFlagTransactionFinalizedOk returns a tuple with the FlagTransactionFinalized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsensusWorkflowStatus) GetFlagTransactionFinalizedOk() (*bool, bool) {
	if o == nil || isNil(o.FlagTransactionFinalized) {
		return nil, false
	}
	return o.FlagTransactionFinalized, true
}

// HasFlagTransactionFinalized returns a boolean if a field has been set.
func (o *ConsensusWorkflowStatus) HasFlagTransactionFinalized() bool {
	if o != nil && !isNil(o.FlagTransactionFinalized) {
		return true
	}

	return false
}

// SetFlagTransactionFinalized gets a reference to the given bool and assigns it to the FlagTransactionFinalized field.
func (o *ConsensusWorkflowStatus) SetFlagTransactionFinalized(v bool) {
	o.FlagTransactionFinalized = &v
}

// GetFlagTransactionPosted returns the FlagTransactionPosted field value if set, zero value otherwise.
func (o *ConsensusWorkflowStatus) GetFlagTransactionPosted() bool {
	if o == nil || isNil(o.FlagTransactionPosted) {
		var ret bool
		return ret
	}
	return *o.FlagTransactionPosted
}

// GetFlagTransactionPostedOk returns a tuple with the FlagTransactionPosted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsensusWorkflowStatus) GetFlagTransactionPostedOk() (*bool, bool) {
	if o == nil || isNil(o.FlagTransactionPosted) {
		return nil, false
	}
	return o.FlagTransactionPosted, true
}

// HasFlagTransactionPosted returns a boolean if a field has been set.
func (o *ConsensusWorkflowStatus) HasFlagTransactionPosted() bool {
	if o != nil && !isNil(o.FlagTransactionPosted) {
		return true
	}

	return false
}

// SetFlagTransactionPosted gets a reference to the given bool and assigns it to the FlagTransactionPosted field.
func (o *ConsensusWorkflowStatus) SetFlagTransactionPosted(v bool) {
	o.FlagTransactionPosted = &v
}

// GetFlagTransactionSeen returns the FlagTransactionSeen field value if set, zero value otherwise.
func (o *ConsensusWorkflowStatus) GetFlagTransactionSeen() bool {
	if o == nil || isNil(o.FlagTransactionSeen) {
		var ret bool
		return ret
	}
	return *o.FlagTransactionSeen
}

// GetFlagTransactionSeenOk returns a tuple with the FlagTransactionSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsensusWorkflowStatus) GetFlagTransactionSeenOk() (*bool, bool) {
	if o == nil || isNil(o.FlagTransactionSeen) {
		return nil, false
	}
	return o.FlagTransactionSeen, true
}

// HasFlagTransactionSeen returns a boolean if a field has been set.
func (o *ConsensusWorkflowStatus) HasFlagTransactionSeen() bool {
	if o != nil && !isNil(o.FlagTransactionSeen) {
		return true
	}

	return false
}

// SetFlagTransactionSeen gets a reference to the given bool and assigns it to the FlagTransactionSeen field.
func (o *ConsensusWorkflowStatus) SetFlagTransactionSeen(v bool) {
	o.FlagTransactionSeen = &v
}

// GetFlagVMResultSigned returns the FlagVMResultSigned field value if set, zero value otherwise.
func (o *ConsensusWorkflowStatus) GetFlagVMResultSigned() bool {
	if o == nil || isNil(o.FlagVMResultSigned) {
		var ret bool
		return ret
	}
	return *o.FlagVMResultSigned
}

// GetFlagVMResultSignedOk returns a tuple with the FlagVMResultSigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsensusWorkflowStatus) GetFlagVMResultSignedOk() (*bool, bool) {
	if o == nil || isNil(o.FlagVMResultSigned) {
		return nil, false
	}
	return o.FlagVMResultSigned, true
}

// HasFlagVMResultSigned returns a boolean if a field has been set.
func (o *ConsensusWorkflowStatus) HasFlagVMResultSigned() bool {
	if o != nil && !isNil(o.FlagVMResultSigned) {
		return true
	}

	return false
}

// SetFlagVMResultSigned gets a reference to the given bool and assigns it to the FlagVMResultSigned field.
func (o *ConsensusWorkflowStatus) SetFlagVMResultSigned(v bool) {
	o.FlagVMResultSigned = &v
}

// GetFlagVMStarted returns the FlagVMStarted field value if set, zero value otherwise.
func (o *ConsensusWorkflowStatus) GetFlagVMStarted() bool {
	if o == nil || isNil(o.FlagVMStarted) {
		var ret bool
		return ret
	}
	return *o.FlagVMStarted
}

// GetFlagVMStartedOk returns a tuple with the FlagVMStarted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsensusWorkflowStatus) GetFlagVMStartedOk() (*bool, bool) {
	if o == nil || isNil(o.FlagVMStarted) {
		return nil, false
	}
	return o.FlagVMStarted, true
}

// HasFlagVMStarted returns a boolean if a field has been set.
func (o *ConsensusWorkflowStatus) HasFlagVMStarted() bool {
	if o != nil && !isNil(o.FlagVMStarted) {
		return true
	}

	return false
}

// SetFlagVMStarted gets a reference to the given bool and assigns it to the FlagVMStarted field.
func (o *ConsensusWorkflowStatus) SetFlagVMStarted(v bool) {
	o.FlagVMStarted = &v
}

// GetTimeBatchProposalSent returns the TimeBatchProposalSent field value if set, zero value otherwise.
func (o *ConsensusWorkflowStatus) GetTimeBatchProposalSent() time.Time {
	if o == nil || isNil(o.TimeBatchProposalSent) {
		var ret time.Time
		return ret
	}
	return *o.TimeBatchProposalSent
}

// GetTimeBatchProposalSentOk returns a tuple with the TimeBatchProposalSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsensusWorkflowStatus) GetTimeBatchProposalSentOk() (*time.Time, bool) {
	if o == nil || isNil(o.TimeBatchProposalSent) {
		return nil, false
	}
	return o.TimeBatchProposalSent, true
}

// HasTimeBatchProposalSent returns a boolean if a field has been set.
func (o *ConsensusWorkflowStatus) HasTimeBatchProposalSent() bool {
	if o != nil && !isNil(o.TimeBatchProposalSent) {
		return true
	}

	return false
}

// SetTimeBatchProposalSent gets a reference to the given time.Time and assigns it to the TimeBatchProposalSent field.
func (o *ConsensusWorkflowStatus) SetTimeBatchProposalSent(v time.Time) {
	o.TimeBatchProposalSent = &v
}

// GetTimeCompleted returns the TimeCompleted field value if set, zero value otherwise.
func (o *ConsensusWorkflowStatus) GetTimeCompleted() time.Time {
	if o == nil || isNil(o.TimeCompleted) {
		var ret time.Time
		return ret
	}
	return *o.TimeCompleted
}

// GetTimeCompletedOk returns a tuple with the TimeCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsensusWorkflowStatus) GetTimeCompletedOk() (*time.Time, bool) {
	if o == nil || isNil(o.TimeCompleted) {
		return nil, false
	}
	return o.TimeCompleted, true
}

// HasTimeCompleted returns a boolean if a field has been set.
func (o *ConsensusWorkflowStatus) HasTimeCompleted() bool {
	if o != nil && !isNil(o.TimeCompleted) {
		return true
	}

	return false
}

// SetTimeCompleted gets a reference to the given time.Time and assigns it to the TimeCompleted field.
func (o *ConsensusWorkflowStatus) SetTimeCompleted(v time.Time) {
	o.TimeCompleted = &v
}

// GetTimeConsensusBatchKnown returns the TimeConsensusBatchKnown field value if set, zero value otherwise.
func (o *ConsensusWorkflowStatus) GetTimeConsensusBatchKnown() time.Time {
	if o == nil || isNil(o.TimeConsensusBatchKnown) {
		var ret time.Time
		return ret
	}
	return *o.TimeConsensusBatchKnown
}

// GetTimeConsensusBatchKnownOk returns a tuple with the TimeConsensusBatchKnown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsensusWorkflowStatus) GetTimeConsensusBatchKnownOk() (*time.Time, bool) {
	if o == nil || isNil(o.TimeConsensusBatchKnown) {
		return nil, false
	}
	return o.TimeConsensusBatchKnown, true
}

// HasTimeConsensusBatchKnown returns a boolean if a field has been set.
func (o *ConsensusWorkflowStatus) HasTimeConsensusBatchKnown() bool {
	if o != nil && !isNil(o.TimeConsensusBatchKnown) {
		return true
	}

	return false
}

// SetTimeConsensusBatchKnown gets a reference to the given time.Time and assigns it to the TimeConsensusBatchKnown field.
func (o *ConsensusWorkflowStatus) SetTimeConsensusBatchKnown(v time.Time) {
	o.TimeConsensusBatchKnown = &v
}

// GetTimeTransactionFinalized returns the TimeTransactionFinalized field value if set, zero value otherwise.
func (o *ConsensusWorkflowStatus) GetTimeTransactionFinalized() time.Time {
	if o == nil || isNil(o.TimeTransactionFinalized) {
		var ret time.Time
		return ret
	}
	return *o.TimeTransactionFinalized
}

// GetTimeTransactionFinalizedOk returns a tuple with the TimeTransactionFinalized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsensusWorkflowStatus) GetTimeTransactionFinalizedOk() (*time.Time, bool) {
	if o == nil || isNil(o.TimeTransactionFinalized) {
		return nil, false
	}
	return o.TimeTransactionFinalized, true
}

// HasTimeTransactionFinalized returns a boolean if a field has been set.
func (o *ConsensusWorkflowStatus) HasTimeTransactionFinalized() bool {
	if o != nil && !isNil(o.TimeTransactionFinalized) {
		return true
	}

	return false
}

// SetTimeTransactionFinalized gets a reference to the given time.Time and assigns it to the TimeTransactionFinalized field.
func (o *ConsensusWorkflowStatus) SetTimeTransactionFinalized(v time.Time) {
	o.TimeTransactionFinalized = &v
}

// GetTimeTransactionPosted returns the TimeTransactionPosted field value if set, zero value otherwise.
func (o *ConsensusWorkflowStatus) GetTimeTransactionPosted() time.Time {
	if o == nil || isNil(o.TimeTransactionPosted) {
		var ret time.Time
		return ret
	}
	return *o.TimeTransactionPosted
}

// GetTimeTransactionPostedOk returns a tuple with the TimeTransactionPosted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsensusWorkflowStatus) GetTimeTransactionPostedOk() (*time.Time, bool) {
	if o == nil || isNil(o.TimeTransactionPosted) {
		return nil, false
	}
	return o.TimeTransactionPosted, true
}

// HasTimeTransactionPosted returns a boolean if a field has been set.
func (o *ConsensusWorkflowStatus) HasTimeTransactionPosted() bool {
	if o != nil && !isNil(o.TimeTransactionPosted) {
		return true
	}

	return false
}

// SetTimeTransactionPosted gets a reference to the given time.Time and assigns it to the TimeTransactionPosted field.
func (o *ConsensusWorkflowStatus) SetTimeTransactionPosted(v time.Time) {
	o.TimeTransactionPosted = &v
}

// GetTimeTransactionSeen returns the TimeTransactionSeen field value if set, zero value otherwise.
func (o *ConsensusWorkflowStatus) GetTimeTransactionSeen() time.Time {
	if o == nil || isNil(o.TimeTransactionSeen) {
		var ret time.Time
		return ret
	}
	return *o.TimeTransactionSeen
}

// GetTimeTransactionSeenOk returns a tuple with the TimeTransactionSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsensusWorkflowStatus) GetTimeTransactionSeenOk() (*time.Time, bool) {
	if o == nil || isNil(o.TimeTransactionSeen) {
		return nil, false
	}
	return o.TimeTransactionSeen, true
}

// HasTimeTransactionSeen returns a boolean if a field has been set.
func (o *ConsensusWorkflowStatus) HasTimeTransactionSeen() bool {
	if o != nil && !isNil(o.TimeTransactionSeen) {
		return true
	}

	return false
}

// SetTimeTransactionSeen gets a reference to the given time.Time and assigns it to the TimeTransactionSeen field.
func (o *ConsensusWorkflowStatus) SetTimeTransactionSeen(v time.Time) {
	o.TimeTransactionSeen = &v
}

// GetTimeVMResultSigned returns the TimeVMResultSigned field value if set, zero value otherwise.
func (o *ConsensusWorkflowStatus) GetTimeVMResultSigned() time.Time {
	if o == nil || isNil(o.TimeVMResultSigned) {
		var ret time.Time
		return ret
	}
	return *o.TimeVMResultSigned
}

// GetTimeVMResultSignedOk returns a tuple with the TimeVMResultSigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsensusWorkflowStatus) GetTimeVMResultSignedOk() (*time.Time, bool) {
	if o == nil || isNil(o.TimeVMResultSigned) {
		return nil, false
	}
	return o.TimeVMResultSigned, true
}

// HasTimeVMResultSigned returns a boolean if a field has been set.
func (o *ConsensusWorkflowStatus) HasTimeVMResultSigned() bool {
	if o != nil && !isNil(o.TimeVMResultSigned) {
		return true
	}

	return false
}

// SetTimeVMResultSigned gets a reference to the given time.Time and assigns it to the TimeVMResultSigned field.
func (o *ConsensusWorkflowStatus) SetTimeVMResultSigned(v time.Time) {
	o.TimeVMResultSigned = &v
}

// GetTimeVMStarted returns the TimeVMStarted field value if set, zero value otherwise.
func (o *ConsensusWorkflowStatus) GetTimeVMStarted() time.Time {
	if o == nil || isNil(o.TimeVMStarted) {
		var ret time.Time
		return ret
	}
	return *o.TimeVMStarted
}

// GetTimeVMStartedOk returns a tuple with the TimeVMStarted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsensusWorkflowStatus) GetTimeVMStartedOk() (*time.Time, bool) {
	if o == nil || isNil(o.TimeVMStarted) {
		return nil, false
	}
	return o.TimeVMStarted, true
}

// HasTimeVMStarted returns a boolean if a field has been set.
func (o *ConsensusWorkflowStatus) HasTimeVMStarted() bool {
	if o != nil && !isNil(o.TimeVMStarted) {
		return true
	}

	return false
}

// SetTimeVMStarted gets a reference to the given time.Time and assigns it to the TimeVMStarted field.
func (o *ConsensusWorkflowStatus) SetTimeVMStarted(v time.Time) {
	o.TimeVMStarted = &v
}

func (o ConsensusWorkflowStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConsensusWorkflowStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CurrentStateIndex) {
		toSerialize["currentStateIndex"] = o.CurrentStateIndex
	}
	if !isNil(o.FlagBatchProposalSent) {
		toSerialize["flagBatchProposalSent"] = o.FlagBatchProposalSent
	}
	if !isNil(o.FlagConsensusBatchKnown) {
		toSerialize["flagConsensusBatchKnown"] = o.FlagConsensusBatchKnown
	}
	if !isNil(o.FlagInProgress) {
		toSerialize["flagInProgress"] = o.FlagInProgress
	}
	if !isNil(o.FlagStateReceived) {
		toSerialize["flagStateReceived"] = o.FlagStateReceived
	}
	if !isNil(o.FlagTransactionFinalized) {
		toSerialize["flagTransactionFinalized"] = o.FlagTransactionFinalized
	}
	if !isNil(o.FlagTransactionPosted) {
		toSerialize["flagTransactionPosted"] = o.FlagTransactionPosted
	}
	if !isNil(o.FlagTransactionSeen) {
		toSerialize["flagTransactionSeen"] = o.FlagTransactionSeen
	}
	if !isNil(o.FlagVMResultSigned) {
		toSerialize["flagVMResultSigned"] = o.FlagVMResultSigned
	}
	if !isNil(o.FlagVMStarted) {
		toSerialize["flagVMStarted"] = o.FlagVMStarted
	}
	if !isNil(o.TimeBatchProposalSent) {
		toSerialize["timeBatchProposalSent"] = o.TimeBatchProposalSent
	}
	if !isNil(o.TimeCompleted) {
		toSerialize["timeCompleted"] = o.TimeCompleted
	}
	if !isNil(o.TimeConsensusBatchKnown) {
		toSerialize["timeConsensusBatchKnown"] = o.TimeConsensusBatchKnown
	}
	if !isNil(o.TimeTransactionFinalized) {
		toSerialize["timeTransactionFinalized"] = o.TimeTransactionFinalized
	}
	if !isNil(o.TimeTransactionPosted) {
		toSerialize["timeTransactionPosted"] = o.TimeTransactionPosted
	}
	if !isNil(o.TimeTransactionSeen) {
		toSerialize["timeTransactionSeen"] = o.TimeTransactionSeen
	}
	if !isNil(o.TimeVMResultSigned) {
		toSerialize["timeVMResultSigned"] = o.TimeVMResultSigned
	}
	if !isNil(o.TimeVMStarted) {
		toSerialize["timeVMStarted"] = o.TimeVMStarted
	}
	return toSerialize, nil
}

type NullableConsensusWorkflowStatus struct {
	value *ConsensusWorkflowStatus
	isSet bool
}

func (v NullableConsensusWorkflowStatus) Get() *ConsensusWorkflowStatus {
	return v.value
}

func (v *NullableConsensusWorkflowStatus) Set(val *ConsensusWorkflowStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableConsensusWorkflowStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableConsensusWorkflowStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsensusWorkflowStatus(val *ConsensusWorkflowStatus) *NullableConsensusWorkflowStatus {
	return &NullableConsensusWorkflowStatus{value: val, isSet: true}
}

func (v NullableConsensusWorkflowStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsensusWorkflowStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


