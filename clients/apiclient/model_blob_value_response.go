/*
Wasp API

REST API for the Wasp node

API version: 0.4.0-alpha.2-403-g907bc6c54
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
)

// checks if the BlobValueResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlobValueResponse{}

// BlobValueResponse struct for BlobValueResponse
type BlobValueResponse struct {
	ValueData *string `json:"ValueData,omitempty"`
}

// NewBlobValueResponse instantiates a new BlobValueResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlobValueResponse() *BlobValueResponse {
	this := BlobValueResponse{}
	return &this
}

// NewBlobValueResponseWithDefaults instantiates a new BlobValueResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlobValueResponseWithDefaults() *BlobValueResponse {
	this := BlobValueResponse{}
	return &this
}

// GetValueData returns the ValueData field value if set, zero value otherwise.
func (o *BlobValueResponse) GetValueData() string {
	if o == nil || isNil(o.ValueData) {
		var ret string
		return ret
	}
	return *o.ValueData
}

// GetValueDataOk returns a tuple with the ValueData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlobValueResponse) GetValueDataOk() (*string, bool) {
	if o == nil || isNil(o.ValueData) {
		return nil, false
	}
	return o.ValueData, true
}

// HasValueData returns a boolean if a field has been set.
func (o *BlobValueResponse) HasValueData() bool {
	if o != nil && !isNil(o.ValueData) {
		return true
	}

	return false
}

// SetValueData gets a reference to the given string and assigns it to the ValueData field.
func (o *BlobValueResponse) SetValueData(v string) {
	o.ValueData = &v
}

func (o BlobValueResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlobValueResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ValueData) {
		toSerialize["ValueData"] = o.ValueData
	}
	return toSerialize, nil
}

type NullableBlobValueResponse struct {
	value *BlobValueResponse
	isSet bool
}

func (v NullableBlobValueResponse) Get() *BlobValueResponse {
	return v.value
}

func (v *NullableBlobValueResponse) Set(val *BlobValueResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBlobValueResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBlobValueResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlobValueResponse(val *BlobValueResponse) *NullableBlobValueResponse {
	return &NullableBlobValueResponse{value: val, isSet: true}
}

func (v NullableBlobValueResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlobValueResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


