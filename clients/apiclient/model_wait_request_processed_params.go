/*
Wasp API

REST API for the Wasp node

API version: 123
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
)

// checks if the WaitRequestProcessedParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WaitRequestProcessedParams{}

// WaitRequestProcessedParams struct for WaitRequestProcessedParams
type WaitRequestProcessedParams struct {
	// Timeout in nanoseconds
	Timeout *int64 `json:"timeout,omitempty"`
}

// NewWaitRequestProcessedParams instantiates a new WaitRequestProcessedParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWaitRequestProcessedParams() *WaitRequestProcessedParams {
	this := WaitRequestProcessedParams{}
	return &this
}

// NewWaitRequestProcessedParamsWithDefaults instantiates a new WaitRequestProcessedParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWaitRequestProcessedParamsWithDefaults() *WaitRequestProcessedParams {
	this := WaitRequestProcessedParams{}
	return &this
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *WaitRequestProcessedParams) GetTimeout() int64 {
	if o == nil || isNil(o.Timeout) {
		var ret int64
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WaitRequestProcessedParams) GetTimeoutOk() (*int64, bool) {
	if o == nil || isNil(o.Timeout) {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *WaitRequestProcessedParams) HasTimeout() bool {
	if o != nil && !isNil(o.Timeout) {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given int64 and assigns it to the Timeout field.
func (o *WaitRequestProcessedParams) SetTimeout(v int64) {
	o.Timeout = &v
}

func (o WaitRequestProcessedParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WaitRequestProcessedParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Timeout) {
		toSerialize["timeout"] = o.Timeout
	}
	return toSerialize, nil
}

type NullableWaitRequestProcessedParams struct {
	value *WaitRequestProcessedParams
	isSet bool
}

func (v NullableWaitRequestProcessedParams) Get() *WaitRequestProcessedParams {
	return v.value
}

func (v *NullableWaitRequestProcessedParams) Set(val *WaitRequestProcessedParams) {
	v.value = val
	v.isSet = true
}

func (v NullableWaitRequestProcessedParams) IsSet() bool {
	return v.isSet
}

func (v *NullableWaitRequestProcessedParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWaitRequestProcessedParams(val *WaitRequestProcessedParams) *NullableWaitRequestProcessedParams {
	return &NullableWaitRequestProcessedParams{value: val, isSet: true}
}

func (v NullableWaitRequestProcessedParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWaitRequestProcessedParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


