/*
Wasp API

REST API for the Wasp node

API version: 0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
)

// checks if the ChainMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChainMetadata{}

// ChainMetadata struct for ChainMetadata
type ChainMetadata struct {
	// The description of the chain.
	ChainDescription string `json:"chainDescription"`
	// The name of the chain
	ChainName string `json:"chainName"`
	// The email of the chain owner.
	ChainOwnerEmail string `json:"chainOwnerEmail"`
	// The official website of the chain.
	ChainWebsite string `json:"chainWebsite"`
	// The EVM json rpc url
	EvmJsonRpcUrl string `json:"evmJsonRpcUrl"`
	// The EVM websocket url)
	EvmWebSocketUrl string `json:"evmWebSocketUrl"`
}

// NewChainMetadata instantiates a new ChainMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChainMetadata(chainDescription string, chainName string, chainOwnerEmail string, chainWebsite string, evmJsonRpcUrl string, evmWebSocketUrl string) *ChainMetadata {
	this := ChainMetadata{}
	this.ChainDescription = chainDescription
	this.ChainName = chainName
	this.ChainOwnerEmail = chainOwnerEmail
	this.ChainWebsite = chainWebsite
	this.EvmJsonRpcUrl = evmJsonRpcUrl
	this.EvmWebSocketUrl = evmWebSocketUrl
	return &this
}

// NewChainMetadataWithDefaults instantiates a new ChainMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChainMetadataWithDefaults() *ChainMetadata {
	this := ChainMetadata{}
	return &this
}

// GetChainDescription returns the ChainDescription field value
func (o *ChainMetadata) GetChainDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChainDescription
}

// GetChainDescriptionOk returns a tuple with the ChainDescription field value
// and a boolean to check if the value has been set.
func (o *ChainMetadata) GetChainDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChainDescription, true
}

// SetChainDescription sets field value
func (o *ChainMetadata) SetChainDescription(v string) {
	o.ChainDescription = v
}

// GetChainName returns the ChainName field value
func (o *ChainMetadata) GetChainName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChainName
}

// GetChainNameOk returns a tuple with the ChainName field value
// and a boolean to check if the value has been set.
func (o *ChainMetadata) GetChainNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChainName, true
}

// SetChainName sets field value
func (o *ChainMetadata) SetChainName(v string) {
	o.ChainName = v
}

// GetChainOwnerEmail returns the ChainOwnerEmail field value
func (o *ChainMetadata) GetChainOwnerEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChainOwnerEmail
}

// GetChainOwnerEmailOk returns a tuple with the ChainOwnerEmail field value
// and a boolean to check if the value has been set.
func (o *ChainMetadata) GetChainOwnerEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChainOwnerEmail, true
}

// SetChainOwnerEmail sets field value
func (o *ChainMetadata) SetChainOwnerEmail(v string) {
	o.ChainOwnerEmail = v
}

// GetChainWebsite returns the ChainWebsite field value
func (o *ChainMetadata) GetChainWebsite() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChainWebsite
}

// GetChainWebsiteOk returns a tuple with the ChainWebsite field value
// and a boolean to check if the value has been set.
func (o *ChainMetadata) GetChainWebsiteOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChainWebsite, true
}

// SetChainWebsite sets field value
func (o *ChainMetadata) SetChainWebsite(v string) {
	o.ChainWebsite = v
}

// GetEvmJsonRpcUrl returns the EvmJsonRpcUrl field value
func (o *ChainMetadata) GetEvmJsonRpcUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EvmJsonRpcUrl
}

// GetEvmJsonRpcUrlOk returns a tuple with the EvmJsonRpcUrl field value
// and a boolean to check if the value has been set.
func (o *ChainMetadata) GetEvmJsonRpcUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EvmJsonRpcUrl, true
}

// SetEvmJsonRpcUrl sets field value
func (o *ChainMetadata) SetEvmJsonRpcUrl(v string) {
	o.EvmJsonRpcUrl = v
}

// GetEvmWebSocketUrl returns the EvmWebSocketUrl field value
func (o *ChainMetadata) GetEvmWebSocketUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EvmWebSocketUrl
}

// GetEvmWebSocketUrlOk returns a tuple with the EvmWebSocketUrl field value
// and a boolean to check if the value has been set.
func (o *ChainMetadata) GetEvmWebSocketUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EvmWebSocketUrl, true
}

// SetEvmWebSocketUrl sets field value
func (o *ChainMetadata) SetEvmWebSocketUrl(v string) {
	o.EvmWebSocketUrl = v
}

func (o ChainMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChainMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["chainDescription"] = o.ChainDescription
	toSerialize["chainName"] = o.ChainName
	toSerialize["chainOwnerEmail"] = o.ChainOwnerEmail
	toSerialize["chainWebsite"] = o.ChainWebsite
	toSerialize["evmJsonRpcUrl"] = o.EvmJsonRpcUrl
	toSerialize["evmWebSocketUrl"] = o.EvmWebSocketUrl
	return toSerialize, nil
}

type NullableChainMetadata struct {
	value *ChainMetadata
	isSet bool
}

func (v NullableChainMetadata) Get() *ChainMetadata {
	return v.value
}

func (v *NullableChainMetadata) Set(val *ChainMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableChainMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableChainMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChainMetadata(val *ChainMetadata) *NullableChainMetadata {
	return &NullableChainMetadata{value: val, isSet: true}
}

func (v NullableChainMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChainMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


