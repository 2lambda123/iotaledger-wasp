/*
Wasp API

REST API for the Wasp node

API version: 0.4.0-alpha.2-402-g2adcf666b
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// RequestProcessedResponse struct for RequestProcessedResponse
type RequestProcessedResponse struct {
	ChainId *string `json:"chainId,omitempty"`
	IsProcessed *bool `json:"isProcessed,omitempty"`
	RequestId *string `json:"requestId,omitempty"`
}

// NewRequestProcessedResponse instantiates a new RequestProcessedResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestProcessedResponse() *RequestProcessedResponse {
	this := RequestProcessedResponse{}
	return &this
}

// NewRequestProcessedResponseWithDefaults instantiates a new RequestProcessedResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestProcessedResponseWithDefaults() *RequestProcessedResponse {
	this := RequestProcessedResponse{}
	return &this
}

// GetChainId returns the ChainId field value if set, zero value otherwise.
func (o *RequestProcessedResponse) GetChainId() string {
	if o == nil || isNil(o.ChainId) {
		var ret string
		return ret
	}
	return *o.ChainId
}

// GetChainIdOk returns a tuple with the ChainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestProcessedResponse) GetChainIdOk() (*string, bool) {
	if o == nil || isNil(o.ChainId) {
    return nil, false
	}
	return o.ChainId, true
}

// HasChainId returns a boolean if a field has been set.
func (o *RequestProcessedResponse) HasChainId() bool {
	if o != nil && !isNil(o.ChainId) {
		return true
	}

	return false
}

// SetChainId gets a reference to the given string and assigns it to the ChainId field.
func (o *RequestProcessedResponse) SetChainId(v string) {
	o.ChainId = &v
}

// GetIsProcessed returns the IsProcessed field value if set, zero value otherwise.
func (o *RequestProcessedResponse) GetIsProcessed() bool {
	if o == nil || isNil(o.IsProcessed) {
		var ret bool
		return ret
	}
	return *o.IsProcessed
}

// GetIsProcessedOk returns a tuple with the IsProcessed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestProcessedResponse) GetIsProcessedOk() (*bool, bool) {
	if o == nil || isNil(o.IsProcessed) {
    return nil, false
	}
	return o.IsProcessed, true
}

// HasIsProcessed returns a boolean if a field has been set.
func (o *RequestProcessedResponse) HasIsProcessed() bool {
	if o != nil && !isNil(o.IsProcessed) {
		return true
	}

	return false
}

// SetIsProcessed gets a reference to the given bool and assigns it to the IsProcessed field.
func (o *RequestProcessedResponse) SetIsProcessed(v bool) {
	o.IsProcessed = &v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *RequestProcessedResponse) GetRequestId() string {
	if o == nil || isNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestProcessedResponse) GetRequestIdOk() (*string, bool) {
	if o == nil || isNil(o.RequestId) {
    return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *RequestProcessedResponse) HasRequestId() bool {
	if o != nil && !isNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *RequestProcessedResponse) SetRequestId(v string) {
	o.RequestId = &v
}

func (o RequestProcessedResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ChainId) {
		toSerialize["chainId"] = o.ChainId
	}
	if !isNil(o.IsProcessed) {
		toSerialize["isProcessed"] = o.IsProcessed
	}
	if !isNil(o.RequestId) {
		toSerialize["requestId"] = o.RequestId
	}
	return json.Marshal(toSerialize)
}

type NullableRequestProcessedResponse struct {
	value *RequestProcessedResponse
	isSet bool
}

func (v NullableRequestProcessedResponse) Get() *RequestProcessedResponse {
	return v.value
}

func (v *NullableRequestProcessedResponse) Set(val *RequestProcessedResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestProcessedResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestProcessedResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestProcessedResponse(val *RequestProcessedResponse) *NullableRequestProcessedResponse {
	return &NullableRequestProcessedResponse{value: val, isSet: true}
}

func (v NullableRequestProcessedResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestProcessedResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


