/*
Wasp API

REST API for the Wasp node

API version: 0.4.0-alpha.2-402-g2adcf666b
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// ControlAddressesResponse struct for ControlAddressesResponse
type ControlAddressesResponse struct {
	GoverningAddress *string `json:"governingAddress,omitempty"`
	SinceBlockIndex *int32 `json:"sinceBlockIndex,omitempty"`
	StateAddress *string `json:"stateAddress,omitempty"`
}

// NewControlAddressesResponse instantiates a new ControlAddressesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewControlAddressesResponse() *ControlAddressesResponse {
	this := ControlAddressesResponse{}
	return &this
}

// NewControlAddressesResponseWithDefaults instantiates a new ControlAddressesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewControlAddressesResponseWithDefaults() *ControlAddressesResponse {
	this := ControlAddressesResponse{}
	return &this
}

// GetGoverningAddress returns the GoverningAddress field value if set, zero value otherwise.
func (o *ControlAddressesResponse) GetGoverningAddress() string {
	if o == nil || isNil(o.GoverningAddress) {
		var ret string
		return ret
	}
	return *o.GoverningAddress
}

// GetGoverningAddressOk returns a tuple with the GoverningAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControlAddressesResponse) GetGoverningAddressOk() (*string, bool) {
	if o == nil || isNil(o.GoverningAddress) {
    return nil, false
	}
	return o.GoverningAddress, true
}

// HasGoverningAddress returns a boolean if a field has been set.
func (o *ControlAddressesResponse) HasGoverningAddress() bool {
	if o != nil && !isNil(o.GoverningAddress) {
		return true
	}

	return false
}

// SetGoverningAddress gets a reference to the given string and assigns it to the GoverningAddress field.
func (o *ControlAddressesResponse) SetGoverningAddress(v string) {
	o.GoverningAddress = &v
}

// GetSinceBlockIndex returns the SinceBlockIndex field value if set, zero value otherwise.
func (o *ControlAddressesResponse) GetSinceBlockIndex() int32 {
	if o == nil || isNil(o.SinceBlockIndex) {
		var ret int32
		return ret
	}
	return *o.SinceBlockIndex
}

// GetSinceBlockIndexOk returns a tuple with the SinceBlockIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControlAddressesResponse) GetSinceBlockIndexOk() (*int32, bool) {
	if o == nil || isNil(o.SinceBlockIndex) {
    return nil, false
	}
	return o.SinceBlockIndex, true
}

// HasSinceBlockIndex returns a boolean if a field has been set.
func (o *ControlAddressesResponse) HasSinceBlockIndex() bool {
	if o != nil && !isNil(o.SinceBlockIndex) {
		return true
	}

	return false
}

// SetSinceBlockIndex gets a reference to the given int32 and assigns it to the SinceBlockIndex field.
func (o *ControlAddressesResponse) SetSinceBlockIndex(v int32) {
	o.SinceBlockIndex = &v
}

// GetStateAddress returns the StateAddress field value if set, zero value otherwise.
func (o *ControlAddressesResponse) GetStateAddress() string {
	if o == nil || isNil(o.StateAddress) {
		var ret string
		return ret
	}
	return *o.StateAddress
}

// GetStateAddressOk returns a tuple with the StateAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControlAddressesResponse) GetStateAddressOk() (*string, bool) {
	if o == nil || isNil(o.StateAddress) {
    return nil, false
	}
	return o.StateAddress, true
}

// HasStateAddress returns a boolean if a field has been set.
func (o *ControlAddressesResponse) HasStateAddress() bool {
	if o != nil && !isNil(o.StateAddress) {
		return true
	}

	return false
}

// SetStateAddress gets a reference to the given string and assigns it to the StateAddress field.
func (o *ControlAddressesResponse) SetStateAddress(v string) {
	o.StateAddress = &v
}

func (o ControlAddressesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.GoverningAddress) {
		toSerialize["governingAddress"] = o.GoverningAddress
	}
	if !isNil(o.SinceBlockIndex) {
		toSerialize["sinceBlockIndex"] = o.SinceBlockIndex
	}
	if !isNil(o.StateAddress) {
		toSerialize["stateAddress"] = o.StateAddress
	}
	return json.Marshal(toSerialize)
}

type NullableControlAddressesResponse struct {
	value *ControlAddressesResponse
	isSet bool
}

func (v NullableControlAddressesResponse) Get() *ControlAddressesResponse {
	return v.value
}

func (v *NullableControlAddressesResponse) Set(val *ControlAddressesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableControlAddressesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableControlAddressesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableControlAddressesResponse(val *ControlAddressesResponse) *NullableControlAddressesResponse {
	return &NullableControlAddressesResponse{value: val, isSet: true}
}

func (v NullableControlAddressesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableControlAddressesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


