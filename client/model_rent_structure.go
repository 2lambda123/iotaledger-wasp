/*
Wasp API

REST API for the Wasp node

API version: 0.4.0-alpha.2-402-g2adcf666b
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// RentStructure struct for RentStructure
type RentStructure struct {
	// The virtual byte cost
	VByteCost *int32 `json:"vByteCost,omitempty"`
	// The virtual byte factor for data fields
	VByteFactorData *int32 `json:"vByteFactorData,omitempty"`
	// The virtual byte factor for key/lookup generating fields
	VByteFactorKey *int32 `json:"vByteFactorKey,omitempty"`
}

// NewRentStructure instantiates a new RentStructure object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRentStructure() *RentStructure {
	this := RentStructure{}
	return &this
}

// NewRentStructureWithDefaults instantiates a new RentStructure object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRentStructureWithDefaults() *RentStructure {
	this := RentStructure{}
	return &this
}

// GetVByteCost returns the VByteCost field value if set, zero value otherwise.
func (o *RentStructure) GetVByteCost() int32 {
	if o == nil || isNil(o.VByteCost) {
		var ret int32
		return ret
	}
	return *o.VByteCost
}

// GetVByteCostOk returns a tuple with the VByteCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RentStructure) GetVByteCostOk() (*int32, bool) {
	if o == nil || isNil(o.VByteCost) {
    return nil, false
	}
	return o.VByteCost, true
}

// HasVByteCost returns a boolean if a field has been set.
func (o *RentStructure) HasVByteCost() bool {
	if o != nil && !isNil(o.VByteCost) {
		return true
	}

	return false
}

// SetVByteCost gets a reference to the given int32 and assigns it to the VByteCost field.
func (o *RentStructure) SetVByteCost(v int32) {
	o.VByteCost = &v
}

// GetVByteFactorData returns the VByteFactorData field value if set, zero value otherwise.
func (o *RentStructure) GetVByteFactorData() int32 {
	if o == nil || isNil(o.VByteFactorData) {
		var ret int32
		return ret
	}
	return *o.VByteFactorData
}

// GetVByteFactorDataOk returns a tuple with the VByteFactorData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RentStructure) GetVByteFactorDataOk() (*int32, bool) {
	if o == nil || isNil(o.VByteFactorData) {
    return nil, false
	}
	return o.VByteFactorData, true
}

// HasVByteFactorData returns a boolean if a field has been set.
func (o *RentStructure) HasVByteFactorData() bool {
	if o != nil && !isNil(o.VByteFactorData) {
		return true
	}

	return false
}

// SetVByteFactorData gets a reference to the given int32 and assigns it to the VByteFactorData field.
func (o *RentStructure) SetVByteFactorData(v int32) {
	o.VByteFactorData = &v
}

// GetVByteFactorKey returns the VByteFactorKey field value if set, zero value otherwise.
func (o *RentStructure) GetVByteFactorKey() int32 {
	if o == nil || isNil(o.VByteFactorKey) {
		var ret int32
		return ret
	}
	return *o.VByteFactorKey
}

// GetVByteFactorKeyOk returns a tuple with the VByteFactorKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RentStructure) GetVByteFactorKeyOk() (*int32, bool) {
	if o == nil || isNil(o.VByteFactorKey) {
    return nil, false
	}
	return o.VByteFactorKey, true
}

// HasVByteFactorKey returns a boolean if a field has been set.
func (o *RentStructure) HasVByteFactorKey() bool {
	if o != nil && !isNil(o.VByteFactorKey) {
		return true
	}

	return false
}

// SetVByteFactorKey gets a reference to the given int32 and assigns it to the VByteFactorKey field.
func (o *RentStructure) SetVByteFactorKey(v int32) {
	o.VByteFactorKey = &v
}

func (o RentStructure) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.VByteCost) {
		toSerialize["vByteCost"] = o.VByteCost
	}
	if !isNil(o.VByteFactorData) {
		toSerialize["vByteFactorData"] = o.VByteFactorData
	}
	if !isNil(o.VByteFactorKey) {
		toSerialize["vByteFactorKey"] = o.VByteFactorKey
	}
	return json.Marshal(toSerialize)
}

type NullableRentStructure struct {
	value *RentStructure
	isSet bool
}

func (v NullableRentStructure) Get() *RentStructure {
	return v.value
}

func (v *NullableRentStructure) Set(val *RentStructure) {
	v.value = val
	v.isSet = true
}

func (v NullableRentStructure) IsSet() bool {
	return v.isSet
}

func (v *NullableRentStructure) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRentStructure(val *RentStructure) *NullableRentStructure {
	return &NullableRentStructure{value: val, isSet: true}
}

func (v NullableRentStructure) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRentStructure) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


