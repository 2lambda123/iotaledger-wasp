/*
Wasp API

REST API for the Wasp node

API version: 0.4.0-alpha.2-402-g2adcf666b
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// ErrorMessageFormatResponse struct for ErrorMessageFormatResponse
type ErrorMessageFormatResponse struct {
	MessageFormat *string `json:"MessageFormat,omitempty"`
}

// NewErrorMessageFormatResponse instantiates a new ErrorMessageFormatResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorMessageFormatResponse() *ErrorMessageFormatResponse {
	this := ErrorMessageFormatResponse{}
	return &this
}

// NewErrorMessageFormatResponseWithDefaults instantiates a new ErrorMessageFormatResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorMessageFormatResponseWithDefaults() *ErrorMessageFormatResponse {
	this := ErrorMessageFormatResponse{}
	return &this
}

// GetMessageFormat returns the MessageFormat field value if set, zero value otherwise.
func (o *ErrorMessageFormatResponse) GetMessageFormat() string {
	if o == nil || isNil(o.MessageFormat) {
		var ret string
		return ret
	}
	return *o.MessageFormat
}

// GetMessageFormatOk returns a tuple with the MessageFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorMessageFormatResponse) GetMessageFormatOk() (*string, bool) {
	if o == nil || isNil(o.MessageFormat) {
    return nil, false
	}
	return o.MessageFormat, true
}

// HasMessageFormat returns a boolean if a field has been set.
func (o *ErrorMessageFormatResponse) HasMessageFormat() bool {
	if o != nil && !isNil(o.MessageFormat) {
		return true
	}

	return false
}

// SetMessageFormat gets a reference to the given string and assigns it to the MessageFormat field.
func (o *ErrorMessageFormatResponse) SetMessageFormat(v string) {
	o.MessageFormat = &v
}

func (o ErrorMessageFormatResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.MessageFormat) {
		toSerialize["MessageFormat"] = o.MessageFormat
	}
	return json.Marshal(toSerialize)
}

type NullableErrorMessageFormatResponse struct {
	value *ErrorMessageFormatResponse
	isSet bool
}

func (v NullableErrorMessageFormatResponse) Get() *ErrorMessageFormatResponse {
	return v.value
}

func (v *NullableErrorMessageFormatResponse) Set(val *ErrorMessageFormatResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorMessageFormatResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorMessageFormatResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorMessageFormatResponse(val *ErrorMessageFormatResponse) *NullableErrorMessageFormatResponse {
	return &NullableErrorMessageFormatResponse{value: val, isSet: true}
}

func (v NullableErrorMessageFormatResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorMessageFormatResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


