/*
Wasp API

REST API for the Wasp node

API version: 0.4.0-alpha.2-402-g2adcf666b
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// OnLedgerRequest struct for OnLedgerRequest
type OnLedgerRequest struct {
	// The request ID
	Id *string `json:"id,omitempty"`
	Output *Output `json:"output,omitempty"`
	// The output ID
	OutputId *string `json:"outputId,omitempty"`
	// The raw data of the request (Hex)
	Raw *string `json:"raw,omitempty"`
}

// NewOnLedgerRequest instantiates a new OnLedgerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOnLedgerRequest() *OnLedgerRequest {
	this := OnLedgerRequest{}
	return &this
}

// NewOnLedgerRequestWithDefaults instantiates a new OnLedgerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnLedgerRequestWithDefaults() *OnLedgerRequest {
	this := OnLedgerRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OnLedgerRequest) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnLedgerRequest) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OnLedgerRequest) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OnLedgerRequest) SetId(v string) {
	o.Id = &v
}

// GetOutput returns the Output field value if set, zero value otherwise.
func (o *OnLedgerRequest) GetOutput() Output {
	if o == nil || isNil(o.Output) {
		var ret Output
		return ret
	}
	return *o.Output
}

// GetOutputOk returns a tuple with the Output field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnLedgerRequest) GetOutputOk() (*Output, bool) {
	if o == nil || isNil(o.Output) {
    return nil, false
	}
	return o.Output, true
}

// HasOutput returns a boolean if a field has been set.
func (o *OnLedgerRequest) HasOutput() bool {
	if o != nil && !isNil(o.Output) {
		return true
	}

	return false
}

// SetOutput gets a reference to the given Output and assigns it to the Output field.
func (o *OnLedgerRequest) SetOutput(v Output) {
	o.Output = &v
}

// GetOutputId returns the OutputId field value if set, zero value otherwise.
func (o *OnLedgerRequest) GetOutputId() string {
	if o == nil || isNil(o.OutputId) {
		var ret string
		return ret
	}
	return *o.OutputId
}

// GetOutputIdOk returns a tuple with the OutputId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnLedgerRequest) GetOutputIdOk() (*string, bool) {
	if o == nil || isNil(o.OutputId) {
    return nil, false
	}
	return o.OutputId, true
}

// HasOutputId returns a boolean if a field has been set.
func (o *OnLedgerRequest) HasOutputId() bool {
	if o != nil && !isNil(o.OutputId) {
		return true
	}

	return false
}

// SetOutputId gets a reference to the given string and assigns it to the OutputId field.
func (o *OnLedgerRequest) SetOutputId(v string) {
	o.OutputId = &v
}

// GetRaw returns the Raw field value if set, zero value otherwise.
func (o *OnLedgerRequest) GetRaw() string {
	if o == nil || isNil(o.Raw) {
		var ret string
		return ret
	}
	return *o.Raw
}

// GetRawOk returns a tuple with the Raw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnLedgerRequest) GetRawOk() (*string, bool) {
	if o == nil || isNil(o.Raw) {
    return nil, false
	}
	return o.Raw, true
}

// HasRaw returns a boolean if a field has been set.
func (o *OnLedgerRequest) HasRaw() bool {
	if o != nil && !isNil(o.Raw) {
		return true
	}

	return false
}

// SetRaw gets a reference to the given string and assigns it to the Raw field.
func (o *OnLedgerRequest) SetRaw(v string) {
	o.Raw = &v
}

func (o OnLedgerRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Output) {
		toSerialize["output"] = o.Output
	}
	if !isNil(o.OutputId) {
		toSerialize["outputId"] = o.OutputId
	}
	if !isNil(o.Raw) {
		toSerialize["raw"] = o.Raw
	}
	return json.Marshal(toSerialize)
}

type NullableOnLedgerRequest struct {
	value *OnLedgerRequest
	isSet bool
}

func (v NullableOnLedgerRequest) Get() *OnLedgerRequest {
	return v.value
}

func (v *NullableOnLedgerRequest) Set(val *OnLedgerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOnLedgerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOnLedgerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnLedgerRequest(val *OnLedgerRequest) *NullableOnLedgerRequest {
	return &NullableOnLedgerRequest{value: val, isSet: true}
}

func (v NullableOnLedgerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnLedgerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


