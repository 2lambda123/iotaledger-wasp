/*
Wasp API

REST API for the Wasp node

API version: 0.4.0-alpha.2-402-g2adcf666b
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// NativeToken struct for NativeToken
type NativeToken struct {
	Amount *string `json:"amount,omitempty"`
	Id *string `json:"id,omitempty"`
}

// NewNativeToken instantiates a new NativeToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNativeToken() *NativeToken {
	this := NativeToken{}
	return &this
}

// NewNativeTokenWithDefaults instantiates a new NativeToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNativeTokenWithDefaults() *NativeToken {
	this := NativeToken{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *NativeToken) GetAmount() string {
	if o == nil || isNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NativeToken) GetAmountOk() (*string, bool) {
	if o == nil || isNil(o.Amount) {
    return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *NativeToken) HasAmount() bool {
	if o != nil && !isNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *NativeToken) SetAmount(v string) {
	o.Amount = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NativeToken) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NativeToken) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NativeToken) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *NativeToken) SetId(v string) {
	o.Id = &v
}

func (o NativeToken) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableNativeToken struct {
	value *NativeToken
	isSet bool
}

func (v NullableNativeToken) Get() *NativeToken {
	return v.value
}

func (v *NullableNativeToken) Set(val *NativeToken) {
	v.value = val
	v.isSet = true
}

func (v NullableNativeToken) IsSet() bool {
	return v.isSet
}

func (v *NullableNativeToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNativeToken(val *NativeToken) *NullableNativeToken {
	return &NullableNativeToken{value: val, isSet: true}
}

func (v NullableNativeToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNativeToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


