/*
Wasp API

REST API for the Wasp node

API version: 0.4.0-alpha.2-402-g2adcf666b
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// BlockReceiptError struct for BlockReceiptError
type BlockReceiptError struct {
	ErrorMessage *string `json:"errorMessage,omitempty"`
	Hash *string `json:"hash,omitempty"`
}

// NewBlockReceiptError instantiates a new BlockReceiptError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockReceiptError() *BlockReceiptError {
	this := BlockReceiptError{}
	return &this
}

// NewBlockReceiptErrorWithDefaults instantiates a new BlockReceiptError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockReceiptErrorWithDefaults() *BlockReceiptError {
	this := BlockReceiptError{}
	return &this
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *BlockReceiptError) GetErrorMessage() string {
	if o == nil || isNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReceiptError) GetErrorMessageOk() (*string, bool) {
	if o == nil || isNil(o.ErrorMessage) {
    return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *BlockReceiptError) HasErrorMessage() bool {
	if o != nil && !isNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *BlockReceiptError) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *BlockReceiptError) GetHash() string {
	if o == nil || isNil(o.Hash) {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReceiptError) GetHashOk() (*string, bool) {
	if o == nil || isNil(o.Hash) {
    return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *BlockReceiptError) HasHash() bool {
	if o != nil && !isNil(o.Hash) {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *BlockReceiptError) SetHash(v string) {
	o.Hash = &v
}

func (o BlockReceiptError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ErrorMessage) {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	if !isNil(o.Hash) {
		toSerialize["hash"] = o.Hash
	}
	return json.Marshal(toSerialize)
}

type NullableBlockReceiptError struct {
	value *BlockReceiptError
	isSet bool
}

func (v NullableBlockReceiptError) Get() *BlockReceiptError {
	return v.value
}

func (v *NullableBlockReceiptError) Set(val *BlockReceiptError) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockReceiptError) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockReceiptError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockReceiptError(val *BlockReceiptError) *NullableBlockReceiptError {
	return &NullableBlockReceiptError{value: val, isSet: true}
}

func (v NullableBlockReceiptError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockReceiptError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


