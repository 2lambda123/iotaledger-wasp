/*
Wasp API

REST API for the Wasp node

API version: 0.4.0-alpha.2-402-g2adcf666b
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// L1Params struct for L1Params
type L1Params struct {
	BaseToken *BaseToken `json:"baseToken,omitempty"`
	// The max payload size
	MaxPayloadSize *int32 `json:"maxPayloadSize,omitempty"`
	Protocol *ProtocolParameters `json:"protocol,omitempty"`
}

// NewL1Params instantiates a new L1Params object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewL1Params() *L1Params {
	this := L1Params{}
	return &this
}

// NewL1ParamsWithDefaults instantiates a new L1Params object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewL1ParamsWithDefaults() *L1Params {
	this := L1Params{}
	return &this
}

// GetBaseToken returns the BaseToken field value if set, zero value otherwise.
func (o *L1Params) GetBaseToken() BaseToken {
	if o == nil || isNil(o.BaseToken) {
		var ret BaseToken
		return ret
	}
	return *o.BaseToken
}

// GetBaseTokenOk returns a tuple with the BaseToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *L1Params) GetBaseTokenOk() (*BaseToken, bool) {
	if o == nil || isNil(o.BaseToken) {
    return nil, false
	}
	return o.BaseToken, true
}

// HasBaseToken returns a boolean if a field has been set.
func (o *L1Params) HasBaseToken() bool {
	if o != nil && !isNil(o.BaseToken) {
		return true
	}

	return false
}

// SetBaseToken gets a reference to the given BaseToken and assigns it to the BaseToken field.
func (o *L1Params) SetBaseToken(v BaseToken) {
	o.BaseToken = &v
}

// GetMaxPayloadSize returns the MaxPayloadSize field value if set, zero value otherwise.
func (o *L1Params) GetMaxPayloadSize() int32 {
	if o == nil || isNil(o.MaxPayloadSize) {
		var ret int32
		return ret
	}
	return *o.MaxPayloadSize
}

// GetMaxPayloadSizeOk returns a tuple with the MaxPayloadSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *L1Params) GetMaxPayloadSizeOk() (*int32, bool) {
	if o == nil || isNil(o.MaxPayloadSize) {
    return nil, false
	}
	return o.MaxPayloadSize, true
}

// HasMaxPayloadSize returns a boolean if a field has been set.
func (o *L1Params) HasMaxPayloadSize() bool {
	if o != nil && !isNil(o.MaxPayloadSize) {
		return true
	}

	return false
}

// SetMaxPayloadSize gets a reference to the given int32 and assigns it to the MaxPayloadSize field.
func (o *L1Params) SetMaxPayloadSize(v int32) {
	o.MaxPayloadSize = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *L1Params) GetProtocol() ProtocolParameters {
	if o == nil || isNil(o.Protocol) {
		var ret ProtocolParameters
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *L1Params) GetProtocolOk() (*ProtocolParameters, bool) {
	if o == nil || isNil(o.Protocol) {
    return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *L1Params) HasProtocol() bool {
	if o != nil && !isNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given ProtocolParameters and assigns it to the Protocol field.
func (o *L1Params) SetProtocol(v ProtocolParameters) {
	o.Protocol = &v
}

func (o L1Params) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BaseToken) {
		toSerialize["baseToken"] = o.BaseToken
	}
	if !isNil(o.MaxPayloadSize) {
		toSerialize["maxPayloadSize"] = o.MaxPayloadSize
	}
	if !isNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	return json.Marshal(toSerialize)
}

type NullableL1Params struct {
	value *L1Params
	isSet bool
}

func (v NullableL1Params) Get() *L1Params {
	return v.value
}

func (v *NullableL1Params) Set(val *L1Params) {
	v.value = val
	v.isSet = true
}

func (v NullableL1Params) IsSet() bool {
	return v.isSet
}

func (v *NullableL1Params) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableL1Params(val *L1Params) *NullableL1Params {
	return &NullableL1Params{value: val, isSet: true}
}

func (v NullableL1Params) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableL1Params) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


