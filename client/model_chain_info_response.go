/*
Wasp API

REST API for the Wasp node

API version: 0.4.0-alpha.2-402-g2adcf666b
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// ChainInfoResponse struct for ChainInfoResponse
type ChainInfoResponse struct {
	// ChainID (Bech32-encoded).
	ChainID *string `json:"chainID,omitempty"`
	// The chain owner address (Bech32-encoded).
	ChainOwnerId *string `json:"chainOwnerId,omitempty"`
	// The description of the chain.
	Description *string `json:"description,omitempty"`
	// The EVM chain ID
	EvmChainId *int32 `json:"evmChainId,omitempty"`
	GasFeePolicy *GasFeePolicy `json:"gasFeePolicy,omitempty"`
	// Whether or not the chain is active.
	IsActive *bool `json:"isActive,omitempty"`
	// The maximum contract blob size.
	MaxBlobSize *int32 `json:"maxBlobSize,omitempty"`
	// The maximum event size.
	MaxEventSize *int32 `json:"maxEventSize,omitempty"`
	// The maximum amount of events per request.
	MaxEventsPerReq *int32 `json:"maxEventsPerReq,omitempty"`
}

// NewChainInfoResponse instantiates a new ChainInfoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChainInfoResponse() *ChainInfoResponse {
	this := ChainInfoResponse{}
	return &this
}

// NewChainInfoResponseWithDefaults instantiates a new ChainInfoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChainInfoResponseWithDefaults() *ChainInfoResponse {
	this := ChainInfoResponse{}
	return &this
}

// GetChainID returns the ChainID field value if set, zero value otherwise.
func (o *ChainInfoResponse) GetChainID() string {
	if o == nil || isNil(o.ChainID) {
		var ret string
		return ret
	}
	return *o.ChainID
}

// GetChainIDOk returns a tuple with the ChainID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChainInfoResponse) GetChainIDOk() (*string, bool) {
	if o == nil || isNil(o.ChainID) {
    return nil, false
	}
	return o.ChainID, true
}

// HasChainID returns a boolean if a field has been set.
func (o *ChainInfoResponse) HasChainID() bool {
	if o != nil && !isNil(o.ChainID) {
		return true
	}

	return false
}

// SetChainID gets a reference to the given string and assigns it to the ChainID field.
func (o *ChainInfoResponse) SetChainID(v string) {
	o.ChainID = &v
}

// GetChainOwnerId returns the ChainOwnerId field value if set, zero value otherwise.
func (o *ChainInfoResponse) GetChainOwnerId() string {
	if o == nil || isNil(o.ChainOwnerId) {
		var ret string
		return ret
	}
	return *o.ChainOwnerId
}

// GetChainOwnerIdOk returns a tuple with the ChainOwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChainInfoResponse) GetChainOwnerIdOk() (*string, bool) {
	if o == nil || isNil(o.ChainOwnerId) {
    return nil, false
	}
	return o.ChainOwnerId, true
}

// HasChainOwnerId returns a boolean if a field has been set.
func (o *ChainInfoResponse) HasChainOwnerId() bool {
	if o != nil && !isNil(o.ChainOwnerId) {
		return true
	}

	return false
}

// SetChainOwnerId gets a reference to the given string and assigns it to the ChainOwnerId field.
func (o *ChainInfoResponse) SetChainOwnerId(v string) {
	o.ChainOwnerId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ChainInfoResponse) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChainInfoResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ChainInfoResponse) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ChainInfoResponse) SetDescription(v string) {
	o.Description = &v
}

// GetEvmChainId returns the EvmChainId field value if set, zero value otherwise.
func (o *ChainInfoResponse) GetEvmChainId() int32 {
	if o == nil || isNil(o.EvmChainId) {
		var ret int32
		return ret
	}
	return *o.EvmChainId
}

// GetEvmChainIdOk returns a tuple with the EvmChainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChainInfoResponse) GetEvmChainIdOk() (*int32, bool) {
	if o == nil || isNil(o.EvmChainId) {
    return nil, false
	}
	return o.EvmChainId, true
}

// HasEvmChainId returns a boolean if a field has been set.
func (o *ChainInfoResponse) HasEvmChainId() bool {
	if o != nil && !isNil(o.EvmChainId) {
		return true
	}

	return false
}

// SetEvmChainId gets a reference to the given int32 and assigns it to the EvmChainId field.
func (o *ChainInfoResponse) SetEvmChainId(v int32) {
	o.EvmChainId = &v
}

// GetGasFeePolicy returns the GasFeePolicy field value if set, zero value otherwise.
func (o *ChainInfoResponse) GetGasFeePolicy() GasFeePolicy {
	if o == nil || isNil(o.GasFeePolicy) {
		var ret GasFeePolicy
		return ret
	}
	return *o.GasFeePolicy
}

// GetGasFeePolicyOk returns a tuple with the GasFeePolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChainInfoResponse) GetGasFeePolicyOk() (*GasFeePolicy, bool) {
	if o == nil || isNil(o.GasFeePolicy) {
    return nil, false
	}
	return o.GasFeePolicy, true
}

// HasGasFeePolicy returns a boolean if a field has been set.
func (o *ChainInfoResponse) HasGasFeePolicy() bool {
	if o != nil && !isNil(o.GasFeePolicy) {
		return true
	}

	return false
}

// SetGasFeePolicy gets a reference to the given GasFeePolicy and assigns it to the GasFeePolicy field.
func (o *ChainInfoResponse) SetGasFeePolicy(v GasFeePolicy) {
	o.GasFeePolicy = &v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *ChainInfoResponse) GetIsActive() bool {
	if o == nil || isNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChainInfoResponse) GetIsActiveOk() (*bool, bool) {
	if o == nil || isNil(o.IsActive) {
    return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *ChainInfoResponse) HasIsActive() bool {
	if o != nil && !isNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *ChainInfoResponse) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetMaxBlobSize returns the MaxBlobSize field value if set, zero value otherwise.
func (o *ChainInfoResponse) GetMaxBlobSize() int32 {
	if o == nil || isNil(o.MaxBlobSize) {
		var ret int32
		return ret
	}
	return *o.MaxBlobSize
}

// GetMaxBlobSizeOk returns a tuple with the MaxBlobSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChainInfoResponse) GetMaxBlobSizeOk() (*int32, bool) {
	if o == nil || isNil(o.MaxBlobSize) {
    return nil, false
	}
	return o.MaxBlobSize, true
}

// HasMaxBlobSize returns a boolean if a field has been set.
func (o *ChainInfoResponse) HasMaxBlobSize() bool {
	if o != nil && !isNil(o.MaxBlobSize) {
		return true
	}

	return false
}

// SetMaxBlobSize gets a reference to the given int32 and assigns it to the MaxBlobSize field.
func (o *ChainInfoResponse) SetMaxBlobSize(v int32) {
	o.MaxBlobSize = &v
}

// GetMaxEventSize returns the MaxEventSize field value if set, zero value otherwise.
func (o *ChainInfoResponse) GetMaxEventSize() int32 {
	if o == nil || isNil(o.MaxEventSize) {
		var ret int32
		return ret
	}
	return *o.MaxEventSize
}

// GetMaxEventSizeOk returns a tuple with the MaxEventSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChainInfoResponse) GetMaxEventSizeOk() (*int32, bool) {
	if o == nil || isNil(o.MaxEventSize) {
    return nil, false
	}
	return o.MaxEventSize, true
}

// HasMaxEventSize returns a boolean if a field has been set.
func (o *ChainInfoResponse) HasMaxEventSize() bool {
	if o != nil && !isNil(o.MaxEventSize) {
		return true
	}

	return false
}

// SetMaxEventSize gets a reference to the given int32 and assigns it to the MaxEventSize field.
func (o *ChainInfoResponse) SetMaxEventSize(v int32) {
	o.MaxEventSize = &v
}

// GetMaxEventsPerReq returns the MaxEventsPerReq field value if set, zero value otherwise.
func (o *ChainInfoResponse) GetMaxEventsPerReq() int32 {
	if o == nil || isNil(o.MaxEventsPerReq) {
		var ret int32
		return ret
	}
	return *o.MaxEventsPerReq
}

// GetMaxEventsPerReqOk returns a tuple with the MaxEventsPerReq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChainInfoResponse) GetMaxEventsPerReqOk() (*int32, bool) {
	if o == nil || isNil(o.MaxEventsPerReq) {
    return nil, false
	}
	return o.MaxEventsPerReq, true
}

// HasMaxEventsPerReq returns a boolean if a field has been set.
func (o *ChainInfoResponse) HasMaxEventsPerReq() bool {
	if o != nil && !isNil(o.MaxEventsPerReq) {
		return true
	}

	return false
}

// SetMaxEventsPerReq gets a reference to the given int32 and assigns it to the MaxEventsPerReq field.
func (o *ChainInfoResponse) SetMaxEventsPerReq(v int32) {
	o.MaxEventsPerReq = &v
}

func (o ChainInfoResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ChainID) {
		toSerialize["chainID"] = o.ChainID
	}
	if !isNil(o.ChainOwnerId) {
		toSerialize["chainOwnerId"] = o.ChainOwnerId
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.EvmChainId) {
		toSerialize["evmChainId"] = o.EvmChainId
	}
	if !isNil(o.GasFeePolicy) {
		toSerialize["gasFeePolicy"] = o.GasFeePolicy
	}
	if !isNil(o.IsActive) {
		toSerialize["isActive"] = o.IsActive
	}
	if !isNil(o.MaxBlobSize) {
		toSerialize["maxBlobSize"] = o.MaxBlobSize
	}
	if !isNil(o.MaxEventSize) {
		toSerialize["maxEventSize"] = o.MaxEventSize
	}
	if !isNil(o.MaxEventsPerReq) {
		toSerialize["maxEventsPerReq"] = o.MaxEventsPerReq
	}
	return json.Marshal(toSerialize)
}

type NullableChainInfoResponse struct {
	value *ChainInfoResponse
	isSet bool
}

func (v NullableChainInfoResponse) Get() *ChainInfoResponse {
	return v.value
}

func (v *NullableChainInfoResponse) Set(val *ChainInfoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableChainInfoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableChainInfoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChainInfoResponse(val *ChainInfoResponse) *NullableChainInfoResponse {
	return &NullableChainInfoResponse{value: val, isSet: true}
}

func (v NullableChainInfoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChainInfoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


