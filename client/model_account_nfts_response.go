/*
Wasp API

REST API for the Wasp node

API version: 0.4.0-alpha.2-402-g2adcf666b
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// AccountNFTsResponse struct for AccountNFTsResponse
type AccountNFTsResponse struct {
	NftIds []string `json:"nftIds,omitempty"`
}

// NewAccountNFTsResponse instantiates a new AccountNFTsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountNFTsResponse() *AccountNFTsResponse {
	this := AccountNFTsResponse{}
	return &this
}

// NewAccountNFTsResponseWithDefaults instantiates a new AccountNFTsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountNFTsResponseWithDefaults() *AccountNFTsResponse {
	this := AccountNFTsResponse{}
	return &this
}

// GetNftIds returns the NftIds field value if set, zero value otherwise.
func (o *AccountNFTsResponse) GetNftIds() []string {
	if o == nil || isNil(o.NftIds) {
		var ret []string
		return ret
	}
	return o.NftIds
}

// GetNftIdsOk returns a tuple with the NftIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountNFTsResponse) GetNftIdsOk() ([]string, bool) {
	if o == nil || isNil(o.NftIds) {
    return nil, false
	}
	return o.NftIds, true
}

// HasNftIds returns a boolean if a field has been set.
func (o *AccountNFTsResponse) HasNftIds() bool {
	if o != nil && !isNil(o.NftIds) {
		return true
	}

	return false
}

// SetNftIds gets a reference to the given []string and assigns it to the NftIds field.
func (o *AccountNFTsResponse) SetNftIds(v []string) {
	o.NftIds = v
}

func (o AccountNFTsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.NftIds) {
		toSerialize["nftIds"] = o.NftIds
	}
	return json.Marshal(toSerialize)
}

type NullableAccountNFTsResponse struct {
	value *AccountNFTsResponse
	isSet bool
}

func (v NullableAccountNFTsResponse) Get() *AccountNFTsResponse {
	return v.value
}

func (v *NullableAccountNFTsResponse) Set(val *AccountNFTsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountNFTsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountNFTsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountNFTsResponse(val *AccountNFTsResponse) *NullableAccountNFTsResponse {
	return &NullableAccountNFTsResponse{value: val, isSet: true}
}

func (v NullableAccountNFTsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountNFTsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


