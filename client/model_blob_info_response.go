/*
Wasp API

REST API for the Wasp node

API version: 0.4.0-alpha.2-402-g2adcf666b
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// BlobInfoResponse struct for BlobInfoResponse
type BlobInfoResponse struct {
	Fields *map[string]int32 `json:"Fields,omitempty"`
}

// NewBlobInfoResponse instantiates a new BlobInfoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlobInfoResponse() *BlobInfoResponse {
	this := BlobInfoResponse{}
	return &this
}

// NewBlobInfoResponseWithDefaults instantiates a new BlobInfoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlobInfoResponseWithDefaults() *BlobInfoResponse {
	this := BlobInfoResponse{}
	return &this
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *BlobInfoResponse) GetFields() map[string]int32 {
	if o == nil || isNil(o.Fields) {
		var ret map[string]int32
		return ret
	}
	return *o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlobInfoResponse) GetFieldsOk() (*map[string]int32, bool) {
	if o == nil || isNil(o.Fields) {
    return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *BlobInfoResponse) HasFields() bool {
	if o != nil && !isNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given map[string]int32 and assigns it to the Fields field.
func (o *BlobInfoResponse) SetFields(v map[string]int32) {
	o.Fields = &v
}

func (o BlobInfoResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Fields) {
		toSerialize["Fields"] = o.Fields
	}
	return json.Marshal(toSerialize)
}

type NullableBlobInfoResponse struct {
	value *BlobInfoResponse
	isSet bool
}

func (v NullableBlobInfoResponse) Get() *BlobInfoResponse {
	return v.value
}

func (v *NullableBlobInfoResponse) Set(val *BlobInfoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBlobInfoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBlobInfoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlobInfoResponse(val *BlobInfoResponse) *NullableBlobInfoResponse {
	return &NullableBlobInfoResponse{value: val, isSet: true}
}

func (v NullableBlobInfoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlobInfoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


