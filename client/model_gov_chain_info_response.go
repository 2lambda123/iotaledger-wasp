/*
Wasp API

REST API for the Wasp node

API version: 0.4.0-alpha.2-402-g2adcf666b
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// GovChainInfoResponse struct for GovChainInfoResponse
type GovChainInfoResponse struct {
	// ChainID (Bech32-encoded).
	ChainID *string `json:"chainID,omitempty"`
	// The chain owner address (Bech32-encoded).
	ChainOwnerId *string `json:"chainOwnerId,omitempty"`
	// The description of the chain.
	Description *string `json:"description,omitempty"`
	GasFeePolicy *GasFeePolicy `json:"gasFeePolicy,omitempty"`
	// The maximum contract blob size.
	MaxBlobSize *int32 `json:"maxBlobSize,omitempty"`
	// The maximum event size.
	MaxEventSize *int32 `json:"maxEventSize,omitempty"`
	// The maximum amount of events per request.
	MaxEventsPerReq *int32 `json:"maxEventsPerReq,omitempty"`
}

// NewGovChainInfoResponse instantiates a new GovChainInfoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGovChainInfoResponse() *GovChainInfoResponse {
	this := GovChainInfoResponse{}
	return &this
}

// NewGovChainInfoResponseWithDefaults instantiates a new GovChainInfoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGovChainInfoResponseWithDefaults() *GovChainInfoResponse {
	this := GovChainInfoResponse{}
	return &this
}

// GetChainID returns the ChainID field value if set, zero value otherwise.
func (o *GovChainInfoResponse) GetChainID() string {
	if o == nil || isNil(o.ChainID) {
		var ret string
		return ret
	}
	return *o.ChainID
}

// GetChainIDOk returns a tuple with the ChainID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GovChainInfoResponse) GetChainIDOk() (*string, bool) {
	if o == nil || isNil(o.ChainID) {
    return nil, false
	}
	return o.ChainID, true
}

// HasChainID returns a boolean if a field has been set.
func (o *GovChainInfoResponse) HasChainID() bool {
	if o != nil && !isNil(o.ChainID) {
		return true
	}

	return false
}

// SetChainID gets a reference to the given string and assigns it to the ChainID field.
func (o *GovChainInfoResponse) SetChainID(v string) {
	o.ChainID = &v
}

// GetChainOwnerId returns the ChainOwnerId field value if set, zero value otherwise.
func (o *GovChainInfoResponse) GetChainOwnerId() string {
	if o == nil || isNil(o.ChainOwnerId) {
		var ret string
		return ret
	}
	return *o.ChainOwnerId
}

// GetChainOwnerIdOk returns a tuple with the ChainOwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GovChainInfoResponse) GetChainOwnerIdOk() (*string, bool) {
	if o == nil || isNil(o.ChainOwnerId) {
    return nil, false
	}
	return o.ChainOwnerId, true
}

// HasChainOwnerId returns a boolean if a field has been set.
func (o *GovChainInfoResponse) HasChainOwnerId() bool {
	if o != nil && !isNil(o.ChainOwnerId) {
		return true
	}

	return false
}

// SetChainOwnerId gets a reference to the given string and assigns it to the ChainOwnerId field.
func (o *GovChainInfoResponse) SetChainOwnerId(v string) {
	o.ChainOwnerId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GovChainInfoResponse) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GovChainInfoResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GovChainInfoResponse) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GovChainInfoResponse) SetDescription(v string) {
	o.Description = &v
}

// GetGasFeePolicy returns the GasFeePolicy field value if set, zero value otherwise.
func (o *GovChainInfoResponse) GetGasFeePolicy() GasFeePolicy {
	if o == nil || isNil(o.GasFeePolicy) {
		var ret GasFeePolicy
		return ret
	}
	return *o.GasFeePolicy
}

// GetGasFeePolicyOk returns a tuple with the GasFeePolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GovChainInfoResponse) GetGasFeePolicyOk() (*GasFeePolicy, bool) {
	if o == nil || isNil(o.GasFeePolicy) {
    return nil, false
	}
	return o.GasFeePolicy, true
}

// HasGasFeePolicy returns a boolean if a field has been set.
func (o *GovChainInfoResponse) HasGasFeePolicy() bool {
	if o != nil && !isNil(o.GasFeePolicy) {
		return true
	}

	return false
}

// SetGasFeePolicy gets a reference to the given GasFeePolicy and assigns it to the GasFeePolicy field.
func (o *GovChainInfoResponse) SetGasFeePolicy(v GasFeePolicy) {
	o.GasFeePolicy = &v
}

// GetMaxBlobSize returns the MaxBlobSize field value if set, zero value otherwise.
func (o *GovChainInfoResponse) GetMaxBlobSize() int32 {
	if o == nil || isNil(o.MaxBlobSize) {
		var ret int32
		return ret
	}
	return *o.MaxBlobSize
}

// GetMaxBlobSizeOk returns a tuple with the MaxBlobSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GovChainInfoResponse) GetMaxBlobSizeOk() (*int32, bool) {
	if o == nil || isNil(o.MaxBlobSize) {
    return nil, false
	}
	return o.MaxBlobSize, true
}

// HasMaxBlobSize returns a boolean if a field has been set.
func (o *GovChainInfoResponse) HasMaxBlobSize() bool {
	if o != nil && !isNil(o.MaxBlobSize) {
		return true
	}

	return false
}

// SetMaxBlobSize gets a reference to the given int32 and assigns it to the MaxBlobSize field.
func (o *GovChainInfoResponse) SetMaxBlobSize(v int32) {
	o.MaxBlobSize = &v
}

// GetMaxEventSize returns the MaxEventSize field value if set, zero value otherwise.
func (o *GovChainInfoResponse) GetMaxEventSize() int32 {
	if o == nil || isNil(o.MaxEventSize) {
		var ret int32
		return ret
	}
	return *o.MaxEventSize
}

// GetMaxEventSizeOk returns a tuple with the MaxEventSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GovChainInfoResponse) GetMaxEventSizeOk() (*int32, bool) {
	if o == nil || isNil(o.MaxEventSize) {
    return nil, false
	}
	return o.MaxEventSize, true
}

// HasMaxEventSize returns a boolean if a field has been set.
func (o *GovChainInfoResponse) HasMaxEventSize() bool {
	if o != nil && !isNil(o.MaxEventSize) {
		return true
	}

	return false
}

// SetMaxEventSize gets a reference to the given int32 and assigns it to the MaxEventSize field.
func (o *GovChainInfoResponse) SetMaxEventSize(v int32) {
	o.MaxEventSize = &v
}

// GetMaxEventsPerReq returns the MaxEventsPerReq field value if set, zero value otherwise.
func (o *GovChainInfoResponse) GetMaxEventsPerReq() int32 {
	if o == nil || isNil(o.MaxEventsPerReq) {
		var ret int32
		return ret
	}
	return *o.MaxEventsPerReq
}

// GetMaxEventsPerReqOk returns a tuple with the MaxEventsPerReq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GovChainInfoResponse) GetMaxEventsPerReqOk() (*int32, bool) {
	if o == nil || isNil(o.MaxEventsPerReq) {
    return nil, false
	}
	return o.MaxEventsPerReq, true
}

// HasMaxEventsPerReq returns a boolean if a field has been set.
func (o *GovChainInfoResponse) HasMaxEventsPerReq() bool {
	if o != nil && !isNil(o.MaxEventsPerReq) {
		return true
	}

	return false
}

// SetMaxEventsPerReq gets a reference to the given int32 and assigns it to the MaxEventsPerReq field.
func (o *GovChainInfoResponse) SetMaxEventsPerReq(v int32) {
	o.MaxEventsPerReq = &v
}

func (o GovChainInfoResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ChainID) {
		toSerialize["chainID"] = o.ChainID
	}
	if !isNil(o.ChainOwnerId) {
		toSerialize["chainOwnerId"] = o.ChainOwnerId
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.GasFeePolicy) {
		toSerialize["gasFeePolicy"] = o.GasFeePolicy
	}
	if !isNil(o.MaxBlobSize) {
		toSerialize["maxBlobSize"] = o.MaxBlobSize
	}
	if !isNil(o.MaxEventSize) {
		toSerialize["maxEventSize"] = o.MaxEventSize
	}
	if !isNil(o.MaxEventsPerReq) {
		toSerialize["maxEventsPerReq"] = o.MaxEventsPerReq
	}
	return json.Marshal(toSerialize)
}

type NullableGovChainInfoResponse struct {
	value *GovChainInfoResponse
	isSet bool
}

func (v NullableGovChainInfoResponse) Get() *GovChainInfoResponse {
	return v.value
}

func (v *NullableGovChainInfoResponse) Set(val *GovChainInfoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGovChainInfoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGovChainInfoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGovChainInfoResponse(val *GovChainInfoResponse) *NullableGovChainInfoResponse {
	return &NullableGovChainInfoResponse{value: val, isSet: true}
}

func (v NullableGovChainInfoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGovChainInfoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


