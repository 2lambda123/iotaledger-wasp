/*
Wasp API

REST API for the Wasp node

API version: 0.4.0-alpha.2-402-g2adcf666b
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// PeeringNodeIdentityResponse struct for PeeringNodeIdentityResponse
type PeeringNodeIdentityResponse struct {
	IsTrusted *bool `json:"isTrusted,omitempty"`
	// The NetID of the peer
	NetId *string `json:"netId,omitempty"`
	// The peers public key encoded in Hex
	PublicKey *string `json:"publicKey,omitempty"`
}

// NewPeeringNodeIdentityResponse instantiates a new PeeringNodeIdentityResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPeeringNodeIdentityResponse() *PeeringNodeIdentityResponse {
	this := PeeringNodeIdentityResponse{}
	return &this
}

// NewPeeringNodeIdentityResponseWithDefaults instantiates a new PeeringNodeIdentityResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPeeringNodeIdentityResponseWithDefaults() *PeeringNodeIdentityResponse {
	this := PeeringNodeIdentityResponse{}
	return &this
}

// GetIsTrusted returns the IsTrusted field value if set, zero value otherwise.
func (o *PeeringNodeIdentityResponse) GetIsTrusted() bool {
	if o == nil || isNil(o.IsTrusted) {
		var ret bool
		return ret
	}
	return *o.IsTrusted
}

// GetIsTrustedOk returns a tuple with the IsTrusted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeeringNodeIdentityResponse) GetIsTrustedOk() (*bool, bool) {
	if o == nil || isNil(o.IsTrusted) {
    return nil, false
	}
	return o.IsTrusted, true
}

// HasIsTrusted returns a boolean if a field has been set.
func (o *PeeringNodeIdentityResponse) HasIsTrusted() bool {
	if o != nil && !isNil(o.IsTrusted) {
		return true
	}

	return false
}

// SetIsTrusted gets a reference to the given bool and assigns it to the IsTrusted field.
func (o *PeeringNodeIdentityResponse) SetIsTrusted(v bool) {
	o.IsTrusted = &v
}

// GetNetId returns the NetId field value if set, zero value otherwise.
func (o *PeeringNodeIdentityResponse) GetNetId() string {
	if o == nil || isNil(o.NetId) {
		var ret string
		return ret
	}
	return *o.NetId
}

// GetNetIdOk returns a tuple with the NetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeeringNodeIdentityResponse) GetNetIdOk() (*string, bool) {
	if o == nil || isNil(o.NetId) {
    return nil, false
	}
	return o.NetId, true
}

// HasNetId returns a boolean if a field has been set.
func (o *PeeringNodeIdentityResponse) HasNetId() bool {
	if o != nil && !isNil(o.NetId) {
		return true
	}

	return false
}

// SetNetId gets a reference to the given string and assigns it to the NetId field.
func (o *PeeringNodeIdentityResponse) SetNetId(v string) {
	o.NetId = &v
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise.
func (o *PeeringNodeIdentityResponse) GetPublicKey() string {
	if o == nil || isNil(o.PublicKey) {
		var ret string
		return ret
	}
	return *o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeeringNodeIdentityResponse) GetPublicKeyOk() (*string, bool) {
	if o == nil || isNil(o.PublicKey) {
    return nil, false
	}
	return o.PublicKey, true
}

// HasPublicKey returns a boolean if a field has been set.
func (o *PeeringNodeIdentityResponse) HasPublicKey() bool {
	if o != nil && !isNil(o.PublicKey) {
		return true
	}

	return false
}

// SetPublicKey gets a reference to the given string and assigns it to the PublicKey field.
func (o *PeeringNodeIdentityResponse) SetPublicKey(v string) {
	o.PublicKey = &v
}

func (o PeeringNodeIdentityResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.IsTrusted) {
		toSerialize["isTrusted"] = o.IsTrusted
	}
	if !isNil(o.NetId) {
		toSerialize["netId"] = o.NetId
	}
	if !isNil(o.PublicKey) {
		toSerialize["publicKey"] = o.PublicKey
	}
	return json.Marshal(toSerialize)
}

type NullablePeeringNodeIdentityResponse struct {
	value *PeeringNodeIdentityResponse
	isSet bool
}

func (v NullablePeeringNodeIdentityResponse) Get() *PeeringNodeIdentityResponse {
	return v.value
}

func (v *NullablePeeringNodeIdentityResponse) Set(val *PeeringNodeIdentityResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePeeringNodeIdentityResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePeeringNodeIdentityResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePeeringNodeIdentityResponse(val *PeeringNodeIdentityResponse) *NullablePeeringNodeIdentityResponse {
	return &NullablePeeringNodeIdentityResponse{value: val, isSet: true}
}

func (v NullablePeeringNodeIdentityResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePeeringNodeIdentityResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


