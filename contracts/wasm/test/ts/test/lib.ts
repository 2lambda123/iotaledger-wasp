// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

import * as wasmlib from "wasmlib";
import * as sc from "./index";

export function on_call(index: i32): void {
    return wasmlib.onCall(index);
}

export function on_load(): void {
    let exports = new wasmlib.ScExports();
    exports.addFunc(sc.FuncAddTestStruct, funcAddTestStructThunk);
    exports.addFunc(sc.FuncClearAll,      funcClearAllThunk);

    for (let i = 0; i < sc.keyMap.length; i++) {
        sc.idxMap[i] = wasmlib.Key32.fromString(sc.keyMap[i]);
    }
}

function funcAddTestStructThunk(ctx: wasmlib.ScFuncContext): void {
	ctx.log("test.funcAddTestStruct");
	let f = new sc.AddTestStructContext();
    f.params.mapID = wasmlib.OBJ_ID_PARAMS;
    f.state.mapID = wasmlib.OBJ_ID_STATE;
	ctx.require(f.params.description().exists(), "missing mandatory description");
	sc.funcAddTestStruct(ctx, f);
	ctx.log("test.funcAddTestStruct ok");
}

function funcClearAllThunk(ctx: wasmlib.ScFuncContext): void {
	ctx.log("test.funcClearAll");
	let f = new sc.ClearAllContext();
    f.state.mapID = wasmlib.OBJ_ID_STATE;
	sc.funcClearAll(ctx, f);
	ctx.log("test.funcClearAll ok");
}
