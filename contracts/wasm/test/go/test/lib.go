// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

//nolint:dupl
package test

import "github.com/iotaledger/wasp/packages/vm/wasmlib/go/wasmlib"

func OnLoad() {
	exports := wasmlib.NewScExports()
	exports.AddFunc(FuncAddTestStruct, funcAddTestStructThunk)
	exports.AddFunc(FuncClearAll,      funcClearAllThunk)

	for i, key := range keyMap {
		idxMap[i] = key.KeyID()
	}
}

type AddTestStructContext struct {
	Params  ImmutableAddTestStructParams
	State   MutabletestState
}

func funcAddTestStructThunk(ctx wasmlib.ScFuncContext) {
	ctx.Log("test.funcAddTestStruct")
	f := &AddTestStructContext{
		Params: ImmutableAddTestStructParams{
			id: wasmlib.OBJ_ID_PARAMS,
		},
		State: MutabletestState{
			id: wasmlib.OBJ_ID_STATE,
		},
	}
	ctx.Require(f.Params.Description().Exists(), "missing mandatory description")
	funcAddTestStruct(ctx, f)
	ctx.Log("test.funcAddTestStruct ok")
}

type ClearAllContext struct {
	State   MutabletestState
}

func funcClearAllThunk(ctx wasmlib.ScFuncContext) {
	ctx.Log("test.funcClearAll")
	f := &ClearAllContext{
		State: MutabletestState{
			id: wasmlib.OBJ_ID_STATE,
		},
	}
	funcClearAll(ctx, f)
	ctx.Log("test.funcClearAll ok")
}
