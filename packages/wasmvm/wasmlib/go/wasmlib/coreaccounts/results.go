// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package coreaccounts

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type ImmutableFoundryCreateNewResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableFoundryCreateNewResults) FoundrySN() wasmtypes.ScImmutableUint32 {
	return wasmtypes.NewScImmutableUint32(s.proxy.Root(ResultFoundrySN))
}

type MutableFoundryCreateNewResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableFoundryCreateNewResults) FoundrySN() wasmtypes.ScMutableUint32 {
	return wasmtypes.NewScMutableUint32(s.proxy.Root(ResultFoundrySN))
}

type ImmutableAccountNFTsResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableAccountNFTsResults) NftIDs() wasmtypes.ScImmutableBytes {
	return wasmtypes.NewScImmutableBytes(s.proxy.Root(ResultNftIDs))
}

type MutableAccountNFTsResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableAccountNFTsResults) NftIDs() wasmtypes.ScMutableBytes {
	return wasmtypes.NewScMutableBytes(s.proxy.Root(ResultNftIDs))
}

type MapAgentIDToImmutableBool struct {
	proxy wasmtypes.Proxy
}

func (m MapAgentIDToImmutableBool) GetBool(key wasmtypes.ScAgentID) wasmtypes.ScImmutableBool {
	return wasmtypes.NewScImmutableBool(m.proxy.Key(wasmtypes.AgentIDToBytes(key)))
}

type ImmutableAccountsResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableAccountsResults) AllAccounts() MapAgentIDToImmutableBool {
	//nolint:gosimple
	return MapAgentIDToImmutableBool{proxy: s.proxy}
}

type MapAgentIDToMutableBool struct {
	proxy wasmtypes.Proxy
}

func (m MapAgentIDToMutableBool) Clear() {
	m.proxy.ClearMap()
}

func (m MapAgentIDToMutableBool) GetBool(key wasmtypes.ScAgentID) wasmtypes.ScMutableBool {
	return wasmtypes.NewScMutableBool(m.proxy.Key(wasmtypes.AgentIDToBytes(key)))
}

type MutableAccountsResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableAccountsResults) AllAccounts() MapAgentIDToMutableBool {
	//nolint:gosimple
	return MapAgentIDToMutableBool{proxy: s.proxy}
}

type MapTokenIDToImmutableBigInt struct {
	proxy wasmtypes.Proxy
}

func (m MapTokenIDToImmutableBigInt) GetBigInt(key wasmtypes.ScTokenID) wasmtypes.ScImmutableBigInt {
	return wasmtypes.NewScImmutableBigInt(m.proxy.Key(wasmtypes.TokenIDToBytes(key)))
}

type ImmutableBalanceResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableBalanceResults) Balances() MapTokenIDToImmutableBigInt {
	//nolint:gosimple
	return MapTokenIDToImmutableBigInt{proxy: s.proxy}
}

type MapTokenIDToMutableBigInt struct {
	proxy wasmtypes.Proxy
}

func (m MapTokenIDToMutableBigInt) Clear() {
	m.proxy.ClearMap()
}

func (m MapTokenIDToMutableBigInt) GetBigInt(key wasmtypes.ScTokenID) wasmtypes.ScMutableBigInt {
	return wasmtypes.NewScMutableBigInt(m.proxy.Key(wasmtypes.TokenIDToBytes(key)))
}

type MutableBalanceResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableBalanceResults) Balances() MapTokenIDToMutableBigInt {
	//nolint:gosimple
	return MapTokenIDToMutableBigInt{proxy: s.proxy}
}

type ImmutableFoundryOutputResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableFoundryOutputResults) FoundryOutputBin() wasmtypes.ScImmutableBytes {
	return wasmtypes.NewScImmutableBytes(s.proxy.Root(ResultFoundryOutputBin))
}

type MutableFoundryOutputResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableFoundryOutputResults) FoundryOutputBin() wasmtypes.ScMutableBytes {
	return wasmtypes.NewScMutableBytes(s.proxy.Root(ResultFoundryOutputBin))
}

type ImmutableGetAccountNonceResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableGetAccountNonceResults) AccountNonce() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.proxy.Root(ResultAccountNonce))
}

type MutableGetAccountNonceResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableGetAccountNonceResults) AccountNonce() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.proxy.Root(ResultAccountNonce))
}

type MapTokenIDToImmutableBool struct {
	proxy wasmtypes.Proxy
}

func (m MapTokenIDToImmutableBool) GetBool(key wasmtypes.ScTokenID) wasmtypes.ScImmutableBool {
	return wasmtypes.NewScImmutableBool(m.proxy.Key(wasmtypes.TokenIDToBytes(key)))
}

type ImmutableGetNativeTokenIDRegistryResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableGetNativeTokenIDRegistryResults) Mapping() MapTokenIDToImmutableBool {
	//nolint:gosimple
	return MapTokenIDToImmutableBool{proxy: s.proxy}
}

type MapTokenIDToMutableBool struct {
	proxy wasmtypes.Proxy
}

func (m MapTokenIDToMutableBool) Clear() {
	m.proxy.ClearMap()
}

func (m MapTokenIDToMutableBool) GetBool(key wasmtypes.ScTokenID) wasmtypes.ScMutableBool {
	return wasmtypes.NewScMutableBool(m.proxy.Key(wasmtypes.TokenIDToBytes(key)))
}

type MutableGetNativeTokenIDRegistryResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableGetNativeTokenIDRegistryResults) Mapping() MapTokenIDToMutableBool {
	//nolint:gosimple
	return MapTokenIDToMutableBool{proxy: s.proxy}
}

type ImmutableNftDataResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableNftDataResults) NftData() wasmtypes.ScImmutableBytes {
	return wasmtypes.NewScImmutableBytes(s.proxy.Root(ResultNftData))
}

type MutableNftDataResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableNftDataResults) NftData() wasmtypes.ScMutableBytes {
	return wasmtypes.NewScMutableBytes(s.proxy.Root(ResultNftData))
}

type ImmutableTotalAssetsResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableTotalAssetsResults) Assets() MapTokenIDToImmutableBigInt {
	//nolint:gosimple
	return MapTokenIDToImmutableBigInt{proxy: s.proxy}
}

type MutableTotalAssetsResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableTotalAssetsResults) Assets() MapTokenIDToMutableBigInt {
	//nolint:gosimple
	return MapTokenIDToMutableBigInt{proxy: s.proxy}
}
