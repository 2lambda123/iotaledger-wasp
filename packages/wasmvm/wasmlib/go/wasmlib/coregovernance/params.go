// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the schema definition file instead

package coregovernance

import (
	"github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib"
	"github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"
)

type ImmutableAddAllowedStateControllerAddressParams struct {
	Proxy wasmtypes.Proxy
}

func NewImmutableAddAllowedStateControllerAddressParams() ImmutableAddAllowedStateControllerAddressParams {
	return ImmutableAddAllowedStateControllerAddressParams{Proxy: wasmlib.NewParamsProxy()}
}

func (s ImmutableAddAllowedStateControllerAddressParams) StateControllerAddress() wasmtypes.ScImmutableAddress {
	return wasmtypes.NewScImmutableAddress(s.Proxy.Root(ParamStateControllerAddress))
}

type MutableAddAllowedStateControllerAddressParams struct {
	Proxy wasmtypes.Proxy
}

func (s MutableAddAllowedStateControllerAddressParams) StateControllerAddress() wasmtypes.ScMutableAddress {
	return wasmtypes.NewScMutableAddress(s.Proxy.Root(ParamStateControllerAddress))
}

type ImmutableAddCandidateNodeParams struct {
	Proxy wasmtypes.Proxy
}

func NewImmutableAddCandidateNodeParams() ImmutableAddCandidateNodeParams {
	return ImmutableAddCandidateNodeParams{Proxy: wasmlib.NewParamsProxy()}
}

func (s ImmutableAddCandidateNodeParams) AccessNodeInfoAccessAPI() wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(s.Proxy.Root(ParamAccessNodeInfoAccessAPI))
}

func (s ImmutableAddCandidateNodeParams) AccessNodeInfoCertificate() wasmtypes.ScImmutableBytes {
	return wasmtypes.NewScImmutableBytes(s.Proxy.Root(ParamAccessNodeInfoCertificate))
}

func (s ImmutableAddCandidateNodeParams) AccessNodeInfoForCommittee() wasmtypes.ScImmutableBool {
	return wasmtypes.NewScImmutableBool(s.Proxy.Root(ParamAccessNodeInfoForCommittee))
}

func (s ImmutableAddCandidateNodeParams) AccessNodeInfoPubKey() wasmtypes.ScImmutableBytes {
	return wasmtypes.NewScImmutableBytes(s.Proxy.Root(ParamAccessNodeInfoPubKey))
}

type MutableAddCandidateNodeParams struct {
	Proxy wasmtypes.Proxy
}

func (s MutableAddCandidateNodeParams) AccessNodeInfoAccessAPI() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(s.Proxy.Root(ParamAccessNodeInfoAccessAPI))
}

func (s MutableAddCandidateNodeParams) AccessNodeInfoCertificate() wasmtypes.ScMutableBytes {
	return wasmtypes.NewScMutableBytes(s.Proxy.Root(ParamAccessNodeInfoCertificate))
}

func (s MutableAddCandidateNodeParams) AccessNodeInfoForCommittee() wasmtypes.ScMutableBool {
	return wasmtypes.NewScMutableBool(s.Proxy.Root(ParamAccessNodeInfoForCommittee))
}

func (s MutableAddCandidateNodeParams) AccessNodeInfoPubKey() wasmtypes.ScMutableBytes {
	return wasmtypes.NewScMutableBytes(s.Proxy.Root(ParamAccessNodeInfoPubKey))
}

type MapBytesToImmutableUint8 struct {
	Proxy wasmtypes.Proxy
}

func (m MapBytesToImmutableUint8) GetUint8(key []byte) wasmtypes.ScImmutableUint8 {
	return wasmtypes.NewScImmutableUint8(m.Proxy.Key(wasmtypes.BytesToBytes(key)))
}

type ImmutableChangeAccessNodesParams struct {
	Proxy wasmtypes.Proxy
}

func NewImmutableChangeAccessNodesParams() ImmutableChangeAccessNodesParams {
	return ImmutableChangeAccessNodesParams{Proxy: wasmlib.NewParamsProxy()}
}

func (s ImmutableChangeAccessNodesParams) ChangeAccessNodesActions() MapBytesToImmutableUint8 {
	return MapBytesToImmutableUint8{Proxy: s.Proxy.Root(ParamChangeAccessNodesActions)}
}

type MapBytesToMutableUint8 struct {
	Proxy wasmtypes.Proxy
}

func (m MapBytesToMutableUint8) Clear() {
	m.Proxy.ClearMap()
}

func (m MapBytesToMutableUint8) GetUint8(key []byte) wasmtypes.ScMutableUint8 {
	return wasmtypes.NewScMutableUint8(m.Proxy.Key(wasmtypes.BytesToBytes(key)))
}

type MutableChangeAccessNodesParams struct {
	Proxy wasmtypes.Proxy
}

func (s MutableChangeAccessNodesParams) ChangeAccessNodesActions() MapBytesToMutableUint8 {
	return MapBytesToMutableUint8{Proxy: s.Proxy.Root(ParamChangeAccessNodesActions)}
}

type ImmutableDelegateChainOwnershipParams struct {
	Proxy wasmtypes.Proxy
}

func NewImmutableDelegateChainOwnershipParams() ImmutableDelegateChainOwnershipParams {
	return ImmutableDelegateChainOwnershipParams{Proxy: wasmlib.NewParamsProxy()}
}

func (s ImmutableDelegateChainOwnershipParams) ChainOwner() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.Proxy.Root(ParamChainOwner))
}

type MutableDelegateChainOwnershipParams struct {
	Proxy wasmtypes.Proxy
}

func (s MutableDelegateChainOwnershipParams) ChainOwner() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.Proxy.Root(ParamChainOwner))
}

type ImmutableRemoveAllowedStateControllerAddressParams struct {
	Proxy wasmtypes.Proxy
}

func NewImmutableRemoveAllowedStateControllerAddressParams() ImmutableRemoveAllowedStateControllerAddressParams {
	return ImmutableRemoveAllowedStateControllerAddressParams{Proxy: wasmlib.NewParamsProxy()}
}

func (s ImmutableRemoveAllowedStateControllerAddressParams) StateControllerAddress() wasmtypes.ScImmutableAddress {
	return wasmtypes.NewScImmutableAddress(s.Proxy.Root(ParamStateControllerAddress))
}

type MutableRemoveAllowedStateControllerAddressParams struct {
	Proxy wasmtypes.Proxy
}

func (s MutableRemoveAllowedStateControllerAddressParams) StateControllerAddress() wasmtypes.ScMutableAddress {
	return wasmtypes.NewScMutableAddress(s.Proxy.Root(ParamStateControllerAddress))
}

type ImmutableRevokeAccessNodeParams struct {
	Proxy wasmtypes.Proxy
}

func NewImmutableRevokeAccessNodeParams() ImmutableRevokeAccessNodeParams {
	return ImmutableRevokeAccessNodeParams{Proxy: wasmlib.NewParamsProxy()}
}

func (s ImmutableRevokeAccessNodeParams) AccessNodeInfoCertificate() wasmtypes.ScImmutableBytes {
	return wasmtypes.NewScImmutableBytes(s.Proxy.Root(ParamAccessNodeInfoCertificate))
}

func (s ImmutableRevokeAccessNodeParams) AccessNodeInfoPubKey() wasmtypes.ScImmutableBytes {
	return wasmtypes.NewScImmutableBytes(s.Proxy.Root(ParamAccessNodeInfoPubKey))
}

type MutableRevokeAccessNodeParams struct {
	Proxy wasmtypes.Proxy
}

func (s MutableRevokeAccessNodeParams) AccessNodeInfoCertificate() wasmtypes.ScMutableBytes {
	return wasmtypes.NewScMutableBytes(s.Proxy.Root(ParamAccessNodeInfoCertificate))
}

func (s MutableRevokeAccessNodeParams) AccessNodeInfoPubKey() wasmtypes.ScMutableBytes {
	return wasmtypes.NewScMutableBytes(s.Proxy.Root(ParamAccessNodeInfoPubKey))
}

type ImmutableRotateStateControllerParams struct {
	Proxy wasmtypes.Proxy
}

func NewImmutableRotateStateControllerParams() ImmutableRotateStateControllerParams {
	return ImmutableRotateStateControllerParams{Proxy: wasmlib.NewParamsProxy()}
}

func (s ImmutableRotateStateControllerParams) StateControllerAddress() wasmtypes.ScImmutableAddress {
	return wasmtypes.NewScImmutableAddress(s.Proxy.Root(ParamStateControllerAddress))
}

type MutableRotateStateControllerParams struct {
	Proxy wasmtypes.Proxy
}

func (s MutableRotateStateControllerParams) StateControllerAddress() wasmtypes.ScMutableAddress {
	return wasmtypes.NewScMutableAddress(s.Proxy.Root(ParamStateControllerAddress))
}

type ImmutableSetFeePolicyParams struct {
	Proxy wasmtypes.Proxy
}

func NewImmutableSetFeePolicyParams() ImmutableSetFeePolicyParams {
	return ImmutableSetFeePolicyParams{Proxy: wasmlib.NewParamsProxy()}
}

func (s ImmutableSetFeePolicyParams) FeePolicyBytes() wasmtypes.ScImmutableBytes {
	return wasmtypes.NewScImmutableBytes(s.Proxy.Root(ParamFeePolicyBytes))
}

type MutableSetFeePolicyParams struct {
	Proxy wasmtypes.Proxy
}

func (s MutableSetFeePolicyParams) FeePolicyBytes() wasmtypes.ScMutableBytes {
	return wasmtypes.NewScMutableBytes(s.Proxy.Root(ParamFeePolicyBytes))
}
