# Copyright 2020 IOTA Stiftung
# SPDX-License-Identifier: Apache-2.0

[package]
name = "wasmclient"
description = "Smart Contract interface library for Wasm clients"
license = "Apache-2.0"
version = "1.0.1"
authors = ["Eric Hop <eric@iota.org>"]
edition = "2018"
repository = "https://github.com/iotaledger/wasp"

[features]
default = ["console_error_panic_hook"]

[dependencies]
iota-client = { git = "https://github.com/iotaledger/iota.rs", branch = "develop" }
iota-crypto = { git = "https://github.com/iotaledger/crypto.rs", branch = "dev", default-features = false, features = [ "blake2b", "ed25519" ] }
wasmlib = { path = "../wasmlib" }
#wasmlib = { git = "https://github.com/iotaledger/wasp", branch = "develop" }
wasm-bindgen = "0.2.84"
serde = { version = "1.0.157", features = ["derive"] }
serde_json = "1.0.94"
bech32 = "0.9.1"
reqwest = { version = "0.11.14", features = ["blocking", "json"] }
url = "2.3.1"
ws = "0.9.2"
serial_test = "1.0.0"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.34"
testwasmlib = { path = "../../../contracts/wasm/testwasmlib/rs/testwasmlib" }
